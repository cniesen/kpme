!***********************************************************************
!  DATA_EXCEPTION.SQR -- Populate exception tables with timesheet
!                        exceptions.
!***********************************************************************
!  Programmer  :  Jim Nelson
!  Date        :  2006-MAY-26
!  Project Name:
!  Description :
!  Notes       :
!
!
!***********************************************************************
!  INDIANA UNIVERSITY MODIFICATION HISTORY
!***********************************************************************
!  Programmer  :
!  Date        :
!  Description :
!
!***********************************************************************


!***********************************************************************
begin-report
  do Main
end-report
!***********************************************************************


!***********************************************************************
! Procedure Name : Main
! Description    : Variable initialization performed here
!***********************************************************************
begin-procedure Main

BEGIN-SELECT
to_char(SYSDATE-1,'YYYYMMDD') &yesterday
to_char(SYSDATE,  'YYYYMMDD') &today
to_char(SYSDATE+1,'YYYYMMDD') &tomorrow

  let $yesterday = &yesterday
  let $today     = &today
  let $tomorrow  = &tomorrow

  do Get-Timesheet-Start-Date
  
  let $min_earliest_time_block_start = $start_dt || ' 00:00:00'
  let $max_latest_time_block_end = $yesterday || ' 23:59:59'
  
  show 'start timeframe ' $min_earliest_time_block_start
  show 'end timeframe   ' $max_latest_time_block_end

FROM DUAL
END-SELECT


!asn ! A. Neal - Code added for Testing                                              !asn
!asn                                                                                 !asn    
!asn let $asn_date       = '20061009'                                                !asn
!asn                                                                                 !asn
!asn while 1=1                                                                       !asn
!asn   add 1 to #i                                                                   !asn
!asn   if #i > 14                                                                    !asn
!asn     break                                                                       !asn
!asn   end-if                                                                        !asn
!asn                                                                                 !asn
!asn begin-select                                                                    !asn
!asn to_char((to_date($asn_date,'yyyymmdd') - 1),'yyyymmdd') &asn_yesterday          !asn
!asn to_char(to_date($asn_date,'yyyymmdd'),'yyyymmdd') &asn_today                    !asn
!asn to_char((to_date($asn_date,'yyyymmdd') + 1),'yyyymmdd') &asn_tomorrow           !asn
!asn from dual                                                                       !asn
!asn end-select                                                                      !asn
!asn                                                                                 !asn
!asn   let $yesterday = &asn_yesterday                                               !asn
!asn   let $today     = &asn_today                                                   !asn   
!asn   let $asn_date  = &asn_tomorrow                                                !asn
!asn                                                                                 !asn
!asn   let $min_earliest_time_block_start = $yesterday || ' 00:00:00'                !asn 
!asn   let $max_latest_time_block_end = $yesterday || ' 23:59:59'                    !asn
!asn                                                                                 !asn
!asn                                                                                 !asn
!asn   show '-----------------------------------'                                    !asn
!asn   show 'yesterday ' $yesterday                                                  !asn
!asn   show 'today ' $today                                                          !asn
!asn   show '-----------------------------------'                                    !asn
!asn 
!asn 

   do Find-Exceptions
   do Hours-Against-Pending-Assignment

!asn 
!asn begin-sql                                                                       !asn
!asn commit                                                                          !asn
!asn end-sql                                                                         !asn
!asn                                                                                 !asn 
!asn end-while                                                                       !asn

end-procedure ! Main



!***********************************************************************
! Procedure Name : Find-Exceptions
! Description    :
!***********************************************************************
begin-procedure Find-Exceptions

let $exception_type = 'HIA'

BEGIN-SELECT
DH.EMPLID
TB.EMPL_RCD
to_char(J.EFFDT,'yyyymmdd') &J.EFFDT
J.EFFSEQ
TB.WORK_AREA_ID
TB.TASK_ID
to_char(TB.BEGIN_TS,'yyyymmdd hh24:mi:ss') &TB.BEGIN_TS
to_char(TB.END_TS,'yyyymmdd hh24:mi:ss') &TB.END_TS


  let $emplid = &DH.EMPLID
  let #empl_rcd = &TB.EMPL_RCD
  let $effdt = &J.EFFDT
  let #effseq = &J.EFFSEQ
  let #work_area_id = &TB.WORK_AREA_ID
  let $task_id = to_char(round(&TB.TASK_ID,0))
  let $block_begin_ts = &TB.BEGIN_TS
  let $block_end_ts = &TB.END_TS
  let $assignment_end_dt = '19010101'

  do Find-Assignment-End-Date
  do Insert-Exception

FROM TK.TK_TIME_BLOCK_T TB, TK.TK_DOCUMENT_HEADER_T DH, HRE.HRE_TK_JOB_T J
WHERE NOT EXISTS (SELECT 'X' FROM HRE.HRE_TK_ASSIGNMENT_T A
                                    WHERE A.EMPLID=DH.EMPLID
AND A.EMPL_RCD=TB.EMPL_RCD
AND A.EFFDT = (SELECT MAX(AD.EFFDT) FROM HRE.HRE_TK_ASSIGNMENT_T AD WHERE AD.EMPLID=A.EMPLID AND AD.EMPL_RCD=A.EMPL_RCD AND AD.EFFDT<=TB.BEGIN_TS)
AND A.EFFSEQ= (SELECT MAX(AQ.EFFSEQ) FROM HRE.HRE_TK_ASSIGNMENT_T AQ WHERE AQ.EMPLID=A.EMPLID AND AQ.EMPL_RCD=A.EMPL_RCD AND AQ.EFFDT=A.EFFDT)
AND A.WORK_AREA_ID = TB.WORK_AREA_ID
AND A.TASK_ID = TB.TASK_ID)
AND TB.BEGIN_TS BETWEEN to_date($min_earliest_time_block_start,'YYYYMMDD hh24:mi:ss') AND to_date($max_latest_time_block_end,'YYYYMMDD hh24:mi:ss')
AND TB.DOCUMENT_ID = DH.DOCUMENT_ID
AND J.EMPLID=DH.EMPLID
AND J.EMPL_RCD=TB.EMPL_RCD
AND J.EFFDT = (SELECT MAX(JD.EFFDT) FROM HRE.HRE_TK_JOB_T JD WHERE JD.EMPLID=J.EMPLID AND JD.EMPL_RCD=J.EMPL_RCD AND JD.EFFDT <= TB.BEGIN_TS)
AND J.EFFSEQ = (SELECT MAX(JS.EFFSEQ) FROM HRE.HRE_TK_JOB_T JS WHERE JS.EMPLID=J.EMPLID AND JS.EMPL_RCD=J.EMPL_RCD AND JS.EFFDT=J.EFFDT)
END-SELECT

end-procedure ! Find-Exceptions



!***********************************************************************
! Procedure Name : Find-Assignment-End-Date
! Description    :
!***********************************************************************
begin-procedure Find-Assignment-End-Date

let $assignment_end_dt = '19010101'

BEGIN-SELECT
to_char(AJ.EFFDT,'yyyymmdd') &AJ.effdt

  let $assignment_end_dt = &AJ.effdt

FROM HRE.HRE_TK_ASSIGNMENT_T AJ
WHERE AJ.EMPLID=$emplid
  AND AJ.EMPL_RCD=#empl_rcd
  AND AJ.EFFDT=(SELECT MAX(AJD.EFFDT) FROM HRE.HRE_TK_ASSIGNMENT_T AJD WHERE AJD.EMPLID=AJ.EMPLID AND AJD.EMPL_RCD=AJ.EMPL_RCD AND AJD.EFFDT<to_date($block_begin_ts,'YYYYMMDD hh24:mi:ss'))
  AND AJ.EFFSEQ=(SELECT MAX(AJS.EFFSEQ) FROM HRE.HRE_TK_ASSIGNMENT_T AJS WHERE AJS.EMPLID=AJ.EMPLID AND AJS.EMPL_RCD=AJ.EMPL_RCD AND AJS.EFFDT=AJ.EFFDT)
  AND EXISTS (SELECT 'X' FROM HRE.HRE_TK_ASSIGNMENT_T B
              WHERE B.EMPLID=AJ.EMPLID
                AND B.EMPL_RCD=AJ.EMPL_RCD
                AND B.EFFDT=AJ.EFFDT
                AND B.EFFSEQ=AJ.EFFSEQ
                AND B.WORK_AREA_ID=#work_area_id
                AND B.TASK_ID=$task_id)
END-SELECT

end-procedure ! Find-Assignment-End-Date


!***********************************************************************
! Procedure Name : Get-Timesheet-Start-Date
! Description    : Determine the start date of current timesheet
!***********************************************************************
begin-procedure Get-Timesheet-Start-Date

let $start_dt = ''
BEGIN-SELECT
to_char(CAL.PAY_END_DT+1,'YYYYMMDD') &start_dt

  let $start_dt = &start_dt

FROM
    SYSADM.PS_PAY_CALENDAR CAL
WHERE
    CAL.COMPANY='IU' AND
    CAL.PAYGROUP='BW1' AND
    CAL.RUN_ID<>' ' AND
    CAL.PAY_OFF_CYCLE_CAL='N' AND
    CAL.PAY_CONFIRM_RUN='N' AND
    CAL.PAY_END_DT = (  SELECT
                            MIN(CALD.PAY_END_DT)
                        FROM
                            SYSADM.PS_PAY_CALENDAR CALD
                        WHERE
                            CALD.COMPANY=CAL.COMPANY AND
                            CALD.PAYGROUP=CAL.PAYGROUP AND
                            CALD.RUN_ID<>' ' AND
                            CALD.PAY_OFF_CYCLE_CAL=CAL.PAY_OFF_CYCLE_CAL AND
                            CALD.PAY_CONFIRM_RUN='N'
    )
END-SELECT

end-procedure ! Get-Timesheet-Start-Date



!***********************************************************************
! Procedure Name : Hours-Against-Pending-Assignment
! Description    :
!***********************************************************************
begin-procedure Hours-Against-Pending-Assignment

let $exception_type = 'HPA'

begin-select
TJ.EMPLID
TJ.EMPL_RCD
to_char(TJ.EFFDT,'YYYYMMDD') &tj.effdt
TJ.EFFSEQ
TBP.WORK_AREA_ID
TBP.TASK_ID
TBP.ERNCD
to_char(TBP.BEGIN_TS,'yyyymmdd hh24:mi:ss') &TBP.BEGIN_TS
to_char(TBP.END_TS,'yyyymmdd hh24:mi:ss') &TBP.END_TS


  let $emplid = &TJ.EMPLID
  let #empl_rcd = &TJ.EMPL_RCD
  let $effdt = &TJ.EFFDT
  let #effseq = &TJ.EFFSEQ
  let #work_area_id = &TBP.WORK_AREA_ID
  let $task_id = to_char(round(&TBP.TASK_ID,0))
  let $block_begin_ts = &TBP.BEGIN_TS
  let $block_end_ts = &TBP.END_TS
  let $assignment_end_dt = &TJ.EFFDT

  do Insert-Exception

FROM
    HRE.HRE_TK_ASSIGNMENT_T ASG,
    HRE.HRE_TK_JOB_T TJ,
    TK.TK_TIME_BLOCK_T TBP,
    TK.TK_DOCUMENT_HEADER_T DHP
WHERE
    TJ.EMPLID= ASG.EMPLID AND
    TJ.EMPL_RCD=ASG.EMPL_RCD AND
    TJ.EFFDT=ASG.EFFDT AND
    TJ.EFFSEQ=ASG.EFFSEQ AND
    NOT EXISTS (SELECT
                    'X' 
                FROM
                    SYSADM.PS_JOB PJ 
                WHERE
                    PJ.EMPLID=TJ.EMPLID AND
                    PJ.EMPL_RCD=TJ.EMPL_RCD AND
                    PJ.EFFDT =TJ.EFFDT AND
                    PJ.EFFSEQ=TJ.EFFSEQ
    ) AND
DHP.EMPLID = TJ.EMPLID AND
DHP.DOCUMENT_ID=TBP.DOCUMENT_ID AND
TBP.EMPL_RCD=TJ.EMPL_RCD AND
TBP.BEGIN_TS BETWEEN to_date($min_earliest_time_block_start,'YYYYMMDD hh24:mi:ss') AND to_date($max_latest_time_block_end,'YYYYMMDD hh24:mi:ss')
AND TBP.WORK_AREA_ID=ASG.WORK_AREA_ID
AND TBP.TASK_ID=ASG.TASK_ID
end-select


end-procedure ! Hours-Against-Pending-Assignment



!***********************************************************************
! Procedure Name : Insert-Exception
! Description    :
!***********************************************************************
begin-procedure Insert-Exception


SHOW '$today            ' $today            
SHOW '$exception_type   ' $exception_type   
SHOW '$emplid           ' $emplid           
SHOW '#empl_rcd         ' #empl_rcd         
SHOW '$effdt            ' $effdt            
SHOW '#effseq           ' #effseq           
SHOW '#work_area_id     ' #work_area_id     
SHOW '$task_id          ' $task_id          
SHOW '$block_begin_ts   ' $block_begin_ts   
SHOW '$block_end_ts     ' $block_end_ts     
SHOW '$assignment_end_dt' $assignment_end_dt

BEGIN-SQL ON-ERROR=SQL_Error 

INSERT INTO TK_INV_ASSIGNMENT_EXCEPTION_T
(
EXCEPTION_DT,
EXCEPTION_TYPE,
EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
WORK_AREA_ID,
TASK_ID,
BLOCK_BEGIN_TS,
BLOCK_END_TS,
ASSIGNMENT_END_DT
)
VALUES
(
to_date($today,'yyyymmdd'),
$exception_type,
$emplid,
#empl_rcd,
TO_DATE($effdt,'yyyymmdd'),
#effseq,
to_char(#work_area_id),
$task_id,
to_date($block_begin_ts,'yyyymmdd hh24:mi:ss'),
to_date($block_end_ts,'yyyymmdd hh24:mi:ss'),
to_date($assignment_end_dt,'yyyymmdd')
)
END-SQL

end-procedure ! Insert-Exception

begin-procedure SQL_error

if substr($sql-error,1,9) = 'ORA-00001'
   ! ignore unique constraints
else
   Show 'SQL Error: ' $sql-error
   Show 'SQL Status: ' #sql-status
   stop
end-if

end-Procedure ! SQL_Error


