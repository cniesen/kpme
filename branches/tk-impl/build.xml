<?xml version="1.0"?>
<!DOCTYPE project>
<project name="tk" default="dist" basedir="." xmlns:artifact="urn:maven-artifact-ant">

	<target name="init">
		<property file="${user.home}/build.properties" />
		<property file="build.properties" />

		<property name="src.dir" value="src/main/java" />
		<property name="resources.dir" value="src/main/resources" />
		<property name="test.src.dir" value="src/test/java" />
		<property name="test.resources.dir" value="src/test/resources" />
		<property name="config.dir" value="src/main/config" />
		<property name="webapp.dir" value="src/main/webapp" />
		<property name="lib.dir" value="src/main/config/lib" />
		<property name="target.dir" value="target" />
		<property name="classes.dir" value="${target.dir}/classes" />
		<property name="test.classes.dir" value="${target.dir}/test-classes" />
		<property name="test.output.dir" value="${target.dir}/test-output" />
		<property name="test.coverage.output.dir" value="${test.output.dir}/coverage" />
		<property name="test.junit.output.dir" value="${test.output.dir}/junit-xml" />
		<property name="plugin.dir" value="${target.dir}/plugin" />
	</target>
		
	<target name="dir-path-setup" depends="init">
	       <mkdir dir="${target.dir}" />
	        <mkdir dir="${classes.dir}" />
	        <mkdir dir="${test.classes.dir}" />
	        <mkdir dir="${lib.dir}" />
	        <mkdir dir="${test.output.dir}" />
	        <mkdir dir="${test.coverage.output.dir}" />
	        <mkdir dir="${test.junit.output.dir}" />
			<mkdir dir="${plugin.dir}" />

            <path id="compile.classpath">
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar" />
                </fileset>
            </path>
            <path id="test.compile.classpath">
                <path refid="compile.classpath" />
                <pathelement location="${classes.dir}" />
            </path>
            <path id="test.runtime.classpath">
                <path refid="test.compile.classpath" />
                <pathelement path="${config.dir}/ant/clover.jar" />
                <pathelement location="${test.classes.dir}" />
                <pathelement location="${classes.dir}" />
            </path>

	        <path id="maven-ant-tasks.classpath" path="${config.dir}/ant/maven-ant-tasks-2.0.8.jar" />
	        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />

	        <taskdef resource="com/cenqua/ant/antlib.xml" classpath="${config.dir}/ant/cenquatasks.jar" />
	        <extendclasspath path="${config.dir}/ant/clover.jar" />
	        <taskdef resource="cloverlib.xml" classpath="${config.dir}/ant/clover.jar" />
	</target>

	<target name="build-lib" depends="dir-path-setup">
		<artifact:remoteRepository id="kuali.repository" url="https://test.kuali.org/maven/" />
		<artifact:remoteRepository id="maven.repository" url="http://repo1.maven.org/maven2/" />
		<artifact:dependencies filesetId="dependency.fileset" sourcesFilesetId="sources.dependency.fileset" versionsId="dependency.versions">
			<dependency groupId="org.kuali.rice" artifactId="rice-kns" version="0.9.1.3-SNAPSHOT" />
			<remoteRepository refid="kuali.repository" />
			<remoteRepository refid="maven.repository" />
		</artifact:dependencies>
		<copy todir="src/main/config/lib">
			<fileset refid="dependency.fileset" />
			<mapper classpathref="maven-ant-tasks.classpath" classname="org.apache.maven.artifact.ant.VersionMapper" from="${dependency.versions}" to="flatten" />
		</copy>
	</target>

	<target name="coverage-setup" depends="dir-path-setup" if="use.clover">
		<clover-setup initstring="${test.coverage.output.dir}/coverage.db" flushpolicy="interval" flushinterval="5000">
			<testsources dir="${test.src.dir}" includes="**/*.java" />
			<files>
				<exclude name="**/*Test.java" />
			</files>
		</clover-setup>
	</target>

	<target name="coverage-report" depends="coverage-setup">
		<property name="clover.license.path" value="${config.dir}/ant/clover.license" />
		<clover-setup initstring="${test.coverage.output.dir}/coverage.db" flushpolicy="interval" flushinterval="5000">
			<files>
				<exclude name="**/*Test.java" />
			</files>
		</clover-setup>
		<clover-report>

			<current outfile="${test.coverage.output.dir}/clover_html">
				<format type="html" />
				<testsources dir="${test.src.dir}" includes="**/*.java" />
				<testresults dir="${test.junit.output.dir}" includes="**/*TEST-*.xml" />
			</current>
		</clover-report>
		<clover-report>

			<current outfile="${test.coverage.output.dir}/clover_xml.xml">
				<format type="xml" />
				<testsources dir="${test.src.dir}" includes="**/*.java" />
				<testresults dir="${test.junit.output.dir}" includes="**/*TEST-*.xml" />
			</current>
		</clover-report>		
	</target>

	<target name="compile" 
			depends="coverage-setup" >
		<echo>Compile Executable ${compilation.target}</echo>

		<javac classpathref="compile.classpath" destdir="${classes.dir}" executable="${compilation.target}" target="1.5" fork="true" debug="true" includeantruntime="true">
			<src path="${src.dir}" />
		</javac>
		<!--
		<javac classpathref="test.compile.classpath" destdir="${classes.dir}" srcdir="${src.dir}" executable="${compilation.target}" target="1.5" fork="true" debug="true" />
		-->

		<copy todir="${classes.dir}">
			<fileset dir="${resources.dir}" />
		</copy>

		<replace file="${classes.dir}/META-INF/tk-config.xml" token="${environment}" value="${build.environment}" />
		<replace file="${classes.dir}/META-INF/tk-config.xml" token="${alt.config.location}" value="${alt.build.location}" />
	</target>

	<target name="dist" depends="compile">
		<war destfile="tk-${build.environment}.war" webxml="${webapp.dir}/WEB-INF/web.xml">
			<fileset dir="${webapp.dir}" />
			<lib dir="${lib.dir}" />
			<classes dir="${classes.dir}" />
		</war>
	</target>

	<target name="deploy-war" depends="dist">
		<copy todir="${appserver.deploy.dir}">
			<fileset file="time-${build.environment}.war" />
		</copy>
	</target>

	<target name="compile-tests" depends="compile">
		<javac classpathref="test.compile.classpath" destdir="${test.classes.dir}" srcdir="${test.src.dir}"  debug="true" includeantruntime="true"/>
		<copy todir="${test.classes.dir}">
			<fileset dir="${test.resources.dir}" />
		</copy>
	</target>

	<target name="run-tests" depends="compile-tests">
		<junit printsummary="true" showoutput="true" fork="true" forkmode="once" maxmemory="1024m">
			<jvmarg value="-XX:MaxPermSize=256m"/>
    <classpath refid="test.runtime.classpath"/>
    <formatter type="xml" />
			<batchtest todir="${test.junit.output.dir}">
				<fileset dir="${test.classes.dir}" includes="${test.classes}" />
			</batchtest>
		</junit>
		<junitreport todir="${test.output.dir}">
			<fileset dir="${test.junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.output.dir}/test-results" />
		</junitreport>
	</target>
	
	<target name="continuous-integration" depends="clean, dir-path-setup, compile, compile-tests, run-tests, coverage-report" />
	
	<target name="clean" depends="init">
		<delete dir="${target.dir}" />
	</target>
	
	<target name="jar-time" depends="compile">
		<delete file="time.jar" failonerror="false" />
	    <jar basedir="${classes.dir}" file="time.jar" excludes="**/*.xml, **/*.properties"/>
	</target>
	
</project>
