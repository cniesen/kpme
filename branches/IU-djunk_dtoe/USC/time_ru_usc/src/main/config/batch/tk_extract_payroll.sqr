!***********************************************************************
! tk_extract_payroll.sqr - Payroll Extract
!***********************************************************************
! Programmer  :  Todd Yampol
! Date        :  7/10/2006
! Project Name:  TK (PS: IUPY078)
! Description :  Extract payroll data from TK system, and insert
!                into PS system.
!***********************************************************************
! INDIANA UNIVERSITY MODIFICATION HISTORY
!***********************************************************************
! Programmer  :  Thomas Visnius
! Date        :  11/20/2006
! Description :  Add hourly rate to insert into ps_iu_pyfnd_intrfc.
!                Set percentages for BW1 based on hours per erncd.
!                Changes marked with IU20061120.
!***********************************************************************
! Programmer  :  Jim Nelson
! Date        :  01/15/2007
! Description :  Changes marked with JRN 2007-01-15
!***********************************************************************
! Programmer  :  Tom Visnius
! Date        :  01/16/2007
! Description :  Bug fix, misspelled erncd_hours_sum once. Changes marked with IU20060116
!***********************************************************************
! Programmer  :  Jim Nelson
! Date        :  03/29/2007
! Description :  Log errors to a table. Changes marked with IU20070329
!***********************************************************************
! Programmer  :  Robert Piercy
! Date        :  06/24/2009
! Description :  process_PS_PAY_EARNINGS added additional pay check
!***********************************************************************
begin-report
  do init
  do Process-Main
end-report

!***********************************************************************
begin-procedure init
!***********************************************************************
  let #TK_PYFND_INTRFC_insert_count = 0
  let $PAY_END_DATE = ' '
  let #TK_HRS_TOTAL = 0
  let #PS_HRS_TOTAL = 0
end-procedure

!***********************************************************************
begin-procedure Process-Main
!***********************************************************************
  let $ERROR_MSG = ''
  do getPayEndDate
  do process_TK_DOCUMENT_HEADER_T
  do process_TK_IU_PYFND_INTRFC
  do update_funding_percentages       !IU20061120 - for BW1 only

  show 'TK_HRS_TOTAL: ' #TK_HRS_TOTAL
  show 'PS_HRS_TOTAL: ' #PS_HRS_TOTAL
end-procedure

!***********************************************************************
begin-procedure getPayEndDate
!***********************************************************************
  begin-select on-error=SQL_Error
TO_CHAR(MAX(A.PAY_END_DT),'MM-DD-YYYY')  &PAY_END_DT

  let $PAY_END_DATE = &PAY_END_DT

FROM TK.TK_EXTRACT_SCHEDULE_T A
WHERE A.PAY_END_DT <= SYSDATE
AND A.EFFDT = (SELECT MAX(AA.EFFDT) FROM TK.TK_EXTRACT_SCHEDULE_T AA
  WHERE A.PAY_END_DT = AA.PAY_END_DT
    AND A.EFFDT <= SYSDATE
    AND A.EFF_STATUS = AA.EFF_STATUS)
AND A.EFFSEQ = (SELECT MAX(AA.EFFSEQ) FROM TK.TK_EXTRACT_SCHEDULE_T AA
  where A.PAY_END_DT = AA.PAY_END_DT
    AND A.EFFDT = AA.EFFDT
    AND A.EFF_STATUS = AA.EFF_STATUS)
AND a.EFF_STATUS='A'
  end-select
end-procedure

!***********************************************************************
begin-procedure process_TK_DOCUMENT_HEADER_T
!***********************************************************************

  begin-select on-error=SQL_Error
B.DOCUMENT_ID
B.EMPLID
  show 'Processing: document_id=' &B.DOCUMENT_ID ', emplid=' &B.EMPLID
  do process_TK_TIME_BLOCK_T(&B.DOCUMENT_ID, &B.EMPLID, $PAY_END_DATE)
FROM TK.TK_DOCUMENT_HEADER_T B
WHERE PAY_END_DT = to_date($PAY_END_DATE, 'MM-DD-YYYY')
  AND DOCUMENT_STATUS='F'
ORDER BY EMPLID
  end-select
end-procedure


!***********************************************************************
begin-procedure process_TK_TIME_BLOCK_T($documentId, $emplid, $payEndDate)
!***********************************************************************
  begin-select on-error=SQL_Error
C.EMPL_RCD
C.WORK_AREA_ID
C.TASK_ID
C.ERNCD
C.BEGIN_TS
C.END_TS
C.CLOCK_CREATED_FL
C.HOURS
C.OVERTIME_ERNCD
C.OVERTIME_HOURS
C.SHIFT_ERNCD
C.SHIFT_HOURS
C.PREMIUM_ERNCD
C.PREMIUM_HOURS

! changed A. Neal 10/02/2006 - OT is already deducted from HOURS column
!   let #entered_hours = &C.HOURS - &C.OVERTIME_HOURS
  let #entered_hours = &C.HOURS
! End Change A. Neal

   do processTimeBlock($emplid, &C.EMPL_RCD, $payEndDate,
                       &C.WORK_AREA_ID, &C.TASK_ID,
                       &C.BEGIN_TS, &C.END_TS,
                       #entered_hours, &C.ERNCD,
                       &C.OVERTIME_HOURS, &C.OVERTIME_ERNCD,
                       &C.SHIFT_HOURS, &C.SHIFT_ERNCD,
                       &C.PREMIUM_HOURS, &C.PREMIUM_ERNCD)

FROM TK.TK_TIME_BLOCK_T C
WHERE C.DOCUMENT_ID = $documentId
  end-select
end-procedure


!***********************************************************************
begin-procedure processTimeBlock($emplid, #emplRcd, $payEndDate,
                                #workAreaId, #taskId,
                                $beginDate, $endDate,
                                #enteredHours, $erncd,
                                #overtimeHours, $overtimeErncd,
                                #shiftHours, $shiftErncd,
                                #premiumHours, $premiumErncd)
!***********************************************************************
   let $company = ''
   let $paygroup= ''
   do findCompanyAndPaygroup($emplid, #emplRcd, $endDate, $company, $paygroup)
   if $company<> '' and $paygroup<>''
     do process_PS_PAY_EARNINGS(
           $emplid, #emplRcd, $payEndDate,
           #workAreaId, #taskId,
           $beginDate, $endDate,
           $company, $paygroup,
           #enteredHours,  $erncd,
           #overtimeHours, $overtimeErncd,
           #shiftHours,    $shiftErncd,
           #premiumHours,  $premiumErncd)
   else
     let $ERROR_MSG = 'company and/or paygroup not found'
     do insert-error($emplid,$ERROR_MSG)
     show 'ERROR: company and/or paygroup not found'
   end-if
end-procedure


!***********************************************************************
begin-procedure findCompanyAndPaygroup($emplid, #emplRcd, $endDate,
                                       :$company, :$paygroup)
!***********************************************************************
  begin-select on-error=SQL_Error
COMPANY
PAYGROUP

  let $company = &COMPANY
  let $paygroup = &PAYGROUP

FROM HRE.HRE_TK_JOB_T TKJ
WHERE EMPLID = $emplid
AND EMPL_RCD = #emplRcd
AND EFFDT = (select max(EFFDT) from HRE.HRE_TK_JOB_T TKJ2
    WHERE TKJ2.EMPLID = TKJ.EMPLID
      AND TKJ2.EMPL_RCD = TKJ.EMPL_RCD
      AND TKJ2.EFFDT <= to_date($endDate, 'DD-MON-YYYY'))
AND EFFSEQ = (select max(EFFSEQ) from HRE.HRE_TK_JOB_T TKJ3
    WHERE TKJ3.EMPLID = TKJ.EMPLID
      AND TKJ3.EMPL_RCD = TKJ.EMPL_RCD
      AND TKJ3.EFFDT = TKJ.EFFDT)
  end-select
end-procedure

!***********************************************************************
begin-procedure process_PS_PAY_EARNINGS(
                                $emplid, #emplRcd, $payEndDate,
                                #workAreaId, #taskId,
                                $beginDate, $endDate,
                                $company, $paygroup,
                                #enteredHours, $erncd,
                                #overtimeHours, $overtimeErncd,
                                #shiftHours, $shiftErncd,
                                #premiumHours, $premiumErncd)
!***********************************************************************
  let $found = 'no'


  begin-select LOOPS=1 on-error=SQL_Error
E.EARNS_END_DT
E.EARNS_BEGIN_DT
E.ERNCD_REG_HRS

  let $found = 'yes'

  if #enteredHours > 0
    do processHours($emplid, #emplRcd, $payEndDate,
                    $beginDate, $endDate,
                    #workAreaId, #taskId,
                    $company, $paygroup,
                    #enteredHours, $erncd, &E.ERNCD_REG_HRS,
                    &E.EARNS_BEGIN_DT,&E.EARNS_END_DT)
  end-if

  if #overtimeHours > 0
    do processHours($emplid, #emplRcd, $payEndDate,
                    $beginDate, $endDate,
                    #workAreaId, #taskId,
                    $company, $paygroup,
                    #overtimeHours, $overtimeErncd, &E.ERNCD_REG_HRS,
                    &E.EARNS_BEGIN_DT,&E.EARNS_END_DT)
  end-if

  if #shiftHours > 0
    do processHours($emplid, #emplRcd, $payEndDate,
                    $beginDate, $endDate,
                    #workAreaId, #taskId,
                    $company, $paygroup,
                    #shiftHours, $shiftErncd, &E.ERNCD_REG_HRS,
                    &E.EARNS_BEGIN_DT,&E.EARNS_END_DT)
  end-if

  if #premiumHours > 0
    do processHours($emplid, #emplRcd, $payEndDate,
                    $beginDate, $endDate,
                    #workAreaId, #taskId,
                    $company, $paygroup,
                    #premiumHours, $premiumErncd, &E.ERNCD_REG_HRS,
                    &E.EARNS_BEGIN_DT,&E.EARNS_END_DT)
  end-if

FROM SYSADM.PS_PAY_EARNINGS E
WHERE E.COMPANY        = $company
AND E.PAYGROUP         = $paygroup
AND E.PAY_END_DT       = to_date($payEndDate, 'MM-DD-YYYY')
AND E.EMPLID           = $emplid
AND E.EMPL_RCD         = #emplRcd
AND E.EARNS_BEGIN_DT  <= to_date($beginDate,'DD-MON-YYYY')
AND E.EARNS_END_DT  >= to_date($endDate,'DD-MON-YYYY')
AND E.PAY_LINE_STATUS <> 'F'
AND E.OFF_CYCLE        = 'N'
AND E.PAGE_NUM         < 7000
AND E.SINGLE_CHECK_USE IN ('N', 'P')
AND E.ADDLPAY_REASON = 'N' 
  end-select

  if $found = 'no'
    let $ERROR_MSG = 'No record found in SYSADM.PS_PAY_EARNINGS.'              ! IU20070329
    do insert-error($emplid,$ERROR_MSG)                                        ! IU20070329
    show 'ERROR:  No record found in SYSADM.PS_PAY_EARNINGS.'
  end-if
end-procedure

!***********************************************************************
begin-procedure processHours(
       $emplid, #emplRcd, $payEndDate,
       $beginDate, $endDate,
       #workAreaId, #taskId,
       $company, $paygroup,
       #hours, $erncd, $erncdRegHrs
       $earnsBeginDt, $earnsEndDt)
!***********************************************************************

let #accountingLineCount = 0                                                   ! JRN 2007-01-15
begin-select  on-error=SQL_Error                                               ! JRN 2007-01-15
count(*) &processHoursCount                                                    ! JRN 2007-01-15
                                                                               ! JRN 2007-01-15
  let #accountingLineCount = &processHoursCount                                ! JRN 2007-01-15
                                                                               ! JRN 2007-01-15
  SHOW '#accountingLineCount 1 ' #accountingLineCount                                                                                 
FROM HRE.HRE_TK_ASSIGNMENT_T TKA_PHC                                           ! JRN 2007-01-15
WHERE EMPLID=$emplid                                                           ! JRN 2007-01-15
AND EMPL_RCD=#emplRcd                                                          ! JRN 2007-01-15
AND EFFDT = (select max(X_PHC.EFFDT) FROM HRE.HRE_TK_ASSIGNMENT_T X_PHC        ! JRN 2007-01-15
             WHERE X_PHC.EMPLID = TKA_PHC.EMPLID                               ! JRN 2007-01-15
               AND X_PHC.EMPL_RCD = TKA_PHC.EMPL_RCD                           ! JRN 2007-01-15
               AND X_PHC.WORK_AREA_ID = TKA_PHC.WORK_AREA_ID                   ! ASN 2007-01-16
               AND X_PHC.TASK_ID = TKA_PHC.TASK_ID                             ! ASN 2007-01-16
               AND X_PHC.ERNCD = TKA_PHC.ERNCD                                 ! ASN 2007-01-16 
               AND X_PHC.EFFDT <= to_date($endDate,'DD-MON-YYYY'))             ! JRN 2007-01-15
AND EFFSEQ = (select max(Y_PHC.EFFSEQ) FROM HRE.HRE_TK_ASSIGNMENT_T Y_PHC      ! JRN 2007-01-15
             WHERE Y_PHC.EMPLID = TKA_PHC.EMPLID                               ! JRN 2007-01-15
               AND Y_PHC.EMPL_RCD = TKA_PHC.EMPL_RCD                           ! JRN 2007-01-15
               AND Y_PHC.WORK_AREA_ID = TKA_PHC.WORK_AREA_ID                   ! ASN 2007-01-16
               AND Y_PHC.TASK_ID = TKA_PHC.TASK_ID                             ! ASN 2007-01-16
               AND Y_PHC.ERNCD = TKA_PHC.ERNCD                                 ! ASN 2007-01-16
               AND Y_PHC.EFFDT = TKA_PHC.EFFDT)                                ! JRN 2007-01-15
AND ERNCD = $erncd                                                             ! JRN 2007-01-15
AND WORK_AREA_ID = #workAreaId                                                 ! JRN 2007-01-15
AND TASK_ID = #taskId                                                          ! JRN 2007-01-15
end-select                                                                     ! JRN 2007-01-15

  let $found = 'no'
  let #remaningHours = #hours
  let #accountingLinesFound = 0                                                ! JRN 2007-01-15
  let #hoursDistributed = 0                                                    ! JRN 2007-01-15
  begin-select on-error=SQL_Error
TKA.PERCENT
TKA.IU_FIN_COA_CD
TKA.IU_ACCOUNT_NBR
TKA.IU_SUB_ACCT_NBR
TKA.IU_FIN_OBJECT_CD
TKA.IU_FIN_SUB_OBJ_CD
TKA.IU_PROJECT_CD
TKA.IU_ORG_REF_ID

  let $found = 'yes'
  let #percent = &TKA.PERCENT / 100
  let #hoursPerAccount = #hours * #percent


  add 1 to #accountingLinesFound                                               ! JRN 2007-01-15
  let #hoursPerAccount = round(#hoursPerAccount, 2)                            ! JRN 2007-01-15
  if (#accountingLinesFound = #accountingLineCount)                            ! JRN 2007-01-15
    let #hoursPerAccount = #hours - #hoursDistributed                          ! JRN 2007-01-15
  end-if                                                                       ! JRN 2007-01-15
  let #hoursDistributed = #hoursDistributed + #hoursPerAccount                 ! JRN 2007-01-15
  
  SHOW ' #hoursDistributed 1 ' #hoursDistributed

  let #remaningHours = #remaningHours - #hoursPerAccount

  let $IU_FIN_COA_CD = &TKA.IU_FIN_COA_CD
  let $IU_ACCOUNT_NBR = &TKA.IU_ACCOUNT_NBR
  let $IU_SUB_ACCT_NBR = &TKA.IU_SUB_ACCT_NBR
  let $IU_FIN_OBJECT_CD = &TKA.IU_FIN_OBJECT_CD
  let $IU_FIN_SUB_OBJ_CD = &TKA.IU_FIN_SUB_OBJ_CD
  let $IU_PROJECT_CD = &TKA.IU_PROJECT_CD
  let $IU_ORG_REF_ID = &TKA.IU_ORG_REF_ID
  if $IU_ORG_REF_ID = ''
    let $IU_ORG_REF_ID = ' '
  end-if

  do insert_TK_PYFND_INTRFC($company,$paygroup,$payEndDate,$emplid,#emplRcd,$earnsBeginDt,$earnsEndDt,$erncd,$IU_FIN_COA_CD,$IU_ACCOUNT_NBR,$IU_SUB_ACCT_NBR,$IU_FIN_OBJECT_CD,$IU_FIN_SUB_OBJ_CD,$IU_PROJECT_CD,$IU_ORG_REF_ID,#hoursPerAccount)

FROM HRE.HRE_TK_ASSIGNMENT_T TKA
WHERE EMPLID=$emplid
AND EMPL_RCD=#emplRcd
AND EFFDT = (select max(X.EFFDT) FROM HRE.HRE_TK_ASSIGNMENT_T X
             WHERE X.EMPLID = TKA.EMPLID
               AND X.EMPL_RCD = TKA.EMPL_RCD
               AND X.WORK_AREA_ID = TKA.WORK_AREA_ID
               AND X.TASK_ID = TKA.TASK_ID
               AND X.ERNCD = TKA.ERNCD
               AND X.EFFDT <= to_date($endDate,'DD-MON-YYYY'))
AND EFFSEQ = (select max(Y.EFFSEQ) FROM HRE.HRE_TK_ASSIGNMENT_T Y
             WHERE Y.EMPLID = TKA.EMPLID
               AND Y.EMPL_RCD = TKA.EMPL_RCD
               AND Y.WORK_AREA_ID = TKA.WORK_AREA_ID
               AND Y.TASK_ID = TKA.TASK_ID
               AND Y.ERNCD = TKA.ERNCD
               AND Y.EFFDT = TKA.EFFDT)
AND ERNCD = $erncd
AND WORK_AREA_ID = #workAreaId
AND TASK_ID = #taskId
  end-select

  if $found = 'no'
    do processHours2($emplid, #emplRcd, $payEndDate,
                     $beginDate, $endDate,
                     #workAreaId, #taskId,
                     $company, $paygroup,
                     #hours, $erncd, $erncdRegHrs,
                     $earnsBeginDt, $earnsEndDt)
  else
    if #remainingHours > 0
      !if any hours remain, add them to the last row inserted
      do updatePyfndIntrfc(#remainingHours,$company,$paygroup,$payEndDate,$emplid,#emplRcd,$earnsBeginDt,$earnsEndDt,$erncd,$IU_FIN_COA_CD,$IU_ACCOUNT_NBR,$IU_SUB_ACCT_NBR,$IU_FIN_OBJECT_CD,$IU_FIN_SUB_OBJ_CD,$IU_PROJECT_CD,$IU_ORG_REF_ID)
    end-if
  end-if

end-procedure

!***********************************************************************
begin-procedure processHours2($emplid, #emplRcd, $payEndDate,
                             $beginDate, $endDate,
                             #workAreaId, #taskId,
                             $company, $paygroup,
                             #hours, $erncd, $erncdRegHrs,
                             $earnsBeginDt, $earnsEndDt)
!***********************************************************************
! This is the same as processHours(), except that $erncdRegHrs is used
! instead of $erncd to select data.
!***********************************************************************
let #accountingLineCount = 0                                                   ! JRN 2007-01-15
begin-select  on-error=SQL_Error                                               ! JRN 2007-01-15
count(*) &processHoursCount2                                                   ! JRN 2007-01-15
                                                                               ! JRN 2007-01-15
  let #accountingLineCount = &processHoursCount2                               ! JRN 2007-01-15

  SHOW '#accountingLineCount 2 ' #accountingLineCount                                                                                 
                                                                               ! JRN 2007-01-15
FROM HRE.HRE_TK_ASSIGNMENT_T TKA_PHC2                                          ! JRN 2007-01-15
WHERE EMPLID=$emplid                                                           ! JRN 2007-01-15
AND EMPL_RCD=#emplRcd                                                          ! JRN 2007-01-15
AND EFFDT = (select max(X_PHC2.EFFDT) FROM HRE.HRE_TK_ASSIGNMENT_T X_PHC2      ! JRN 2007-01-15
             WHERE X_PHC2.EMPLID = TKA_PHC2.EMPLID                             ! JRN 2007-01-15
               AND X_PHC2.EMPL_RCD = TKA_PHC2.EMPL_RCD                         ! JRN 2007-01-15
               AND X_PHC2.WORK_AREA_ID = TKA_PHC2.WORK_AREA_ID                 ! ASN 2007-01-16
               AND X_PHC2.TASK_ID = TKA_PHC2.TASK_ID                           ! ASN 2007-01-16
               AND X_PHC2.ERNCD = TKA_PHC2.ERNCD                               ! ASN 2007-01-16
               AND X_PHC2.EFFDT <= to_date($endDate,'DD-MON-YYYY'))            ! JRN 2007-01-15
AND EFFSEQ = (select max(Y_PHC2.EFFSEQ) FROM HRE.HRE_TK_ASSIGNMENT_T Y_PHC2    ! JRN 2007-01-15
             WHERE Y_PHC2.EMPLID = TKA_PHC2.EMPLID                             ! JRN 2007-01-15
               AND Y_PHC2.EMPL_RCD = TKA_PHC2.EMPL_RCD                         ! JRN 2007-01-15
               AND Y_PHC2.WORK_AREA_ID = TKA_PHC2.WORK_AREA_ID                 ! ASN 2007-01-16 
               AND Y_PHC2.TASK_ID = TKA_PHC2.TASK_ID                           ! ASN 2007-01-16
               AND Y_PHC2.ERNCD = TKA_PHC2.ERNCD                               ! ASN 2007-01-16 
               AND Y_PHC2.EFFDT = TKA_PHC2.EFFDT)                              ! JRN 2007-01-15
AND ERNCD = $erncdRegHrs                                                       ! JRN 2007-01-15
AND WORK_AREA_ID = #workAreaId                                                 ! JRN 2007-01-15
AND TASK_ID = #taskId                                                          ! JRN 2007-01-15
end-select                                                                     ! JRN 2007-01-15


  let $found = 'no'
  let #remaningHours = #hours
  let #accountingLinesFound = 0                                                ! JRN 2007-01-15
  let #hoursDistributed = 0                                                    ! JRN 2007-01-15
  begin-select on-error=SQL_Error
TKA2.PERCENT
TKA2.IU_FIN_COA_CD
TKA2.IU_ACCOUNT_NBR
TKA2.IU_SUB_ACCT_NBR
TKA2.IU_FIN_OBJECT_CD
TKA2.IU_FIN_SUB_OBJ_CD
TKA2.IU_PROJECT_CD
TKA2.IU_ORG_REF_ID

  let $found = 'yes'
  let #percent = &TKA2.PERCENT / 100
  let #hoursPerAccount = #hours * #percent

  add 1 to #accountingLinesFound                                               ! JRN 2007-01-15
  let #hoursPerAccount = round(#hoursPerAccount, 2)                            ! JRN 2007-01-15
  if (#accountingLinesFound = #accountingLineCount)                            ! JRN 2007-01-15
    let #hoursPerAccount = #hours - #hoursDistributed                          ! JRN 2007-01-15
  end-if                                                                       ! JRN 2007-01-15
  let #hoursDistributed = #hoursDistributed + #hoursPerAccount                 ! JRN 2007-01-15
  
  SHOW ' #hoursDistributed 2 ' #hoursDistributed

  let #remaningHours = #remaningHours - #hoursPerAccount
  let $IU_FIN_COA_CD = &TKA2.IU_FIN_COA_CD
  let $IU_ACCOUNT_NBR = &TKA2.IU_ACCOUNT_NBR
  let $IU_SUB_ACCT_NBR = &TKA2.IU_SUB_ACCT_NBR
  let $IU_FIN_OBJECT_CD = &TKA2.IU_FIN_OBJECT_CD
  let $IU_FIN_SUB_OBJ_CD = &TKA2.IU_FIN_SUB_OBJ_CD
  let $IU_PROJECT_CD = &TKA2.IU_PROJECT_CD
  let $IU_ORG_REF_ID = &TKA2.IU_ORG_REF_ID
  if $IU_ORG_REF_ID = ''
    let $IU_ORG_REF_ID = ' '
  end-if

  do insert_TK_PYFND_INTRFC($company,$paygroup,$payEndDate,$emplid,#emplRcd,$earnsBeginDt,$earnsEndDt,$erncd,$IU_FIN_COA_CD,$IU_ACCOUNT_NBR,$IU_SUB_ACCT_NBR,$IU_FIN_OBJECT_CD,$IU_FIN_SUB_OBJ_CD,$IU_PROJECT_CD,$IU_ORG_REF_ID,#hoursPerAccount)

FROM HRE.HRE_TK_ASSIGNMENT_T TKA2
WHERE EMPLID=$emplid
AND EMPL_RCD=#emplRcd
AND EFFDT = (select max(X.EFFDT) FROM HRE.HRE_TK_ASSIGNMENT_T X
             WHERE X.EMPLID = TKA2.EMPLID
               AND X.EMPL_RCD = TKA2.EMPL_RCD
               AND X.WORK_AREA_ID = TKA2.WORK_AREA_ID
               AND X.TASK_ID = TKA2.TASK_ID
               AND X.ERNCD = TKA2.ERNCD
               AND X.EFFDT <= TO_DATE($endDate,'DD-MON-YYYY'))
AND EFFSEQ = (select max(Y.EFFSEQ) FROM HRE.HRE_TK_ASSIGNMENT_T Y
             WHERE Y.EMPLID = TKA2.EMPLID
               AND Y.EMPL_RCD = TKA2.EMPL_RCD
               AND Y.WORK_AREA_ID = TKA2.WORK_AREA_ID
               AND Y.TASK_ID = TKA2.TASK_ID
               AND Y.ERNCD = TKA2.ERNCD
               AND Y.EFFDT = TKA2.EFFDT)
AND ERNCD = $erncdRegHrs
AND WORK_AREA_ID = #workAreaId
AND TASK_ID = #taskId
  end-select

  if $found = 'no'
    let $ERROR_MSG = 'ERROR: No distribution found in HRE.HRE_TK_ASSIGNMENT_T' ! IU20070329
    do insert-error($emplid,$ERROR_MSG)                                        ! IU20070329
    show 'ERROR: No distribution found in HRE.HRE_TK_ASSIGNMENT_T'
  else
    if #remainingHours > 0
      !if any hours remain, add them to the last row inserted
      do updatePyfndIntrfc(#remainingHours,$company,$paygroup,$payEndDate,$emplid,#emplRcd,$earnsBeginDt,$earnsEndDt,$erncd,$IU_FIN_COA_CD,$IU_ACCOUNT_NBR,$IU_SUB_ACCT_NBR,$IU_FIN_OBJECT_CD,$IU_FIN_SUB_OBJ_CD,$IU_PROJECT_CD,$IU_ORG_REF_ID)
    end-if
  end-if
end-procedure

!********************************************************************
begin-procedure insert_TK_PYFND_INTRFC($company,$paygroup,$payEndDate,$emplid,#emplRcd,$earnsBeginDt,$earnsEndDt,$erncd,$IU_FIN_COA_CD,$IU_ACCOUNT_NBR,$IU_SUB_ACCT_NBR,$IU_FIN_OBJECT_CD,$IU_FIN_SUB_OBJ_CD,$IU_PROJECT_CD,$IU_ORG_REF_ID,#IU_HRS_FOR_PRD)
!********************************************************************
  add 1 to #_TK_PYFND_INTRFC_insert_count
  let $iu_pyfnd_intrfc_id = 'TK1'
      || edit(#_TK_PYFND_INTRFC_insert_count,'0000000000000')

!  show ' '
!  show 'INSERT INTO TK.TK_IU_PYFND_INTRFC'
!       ',$company=' $company
!       ',$paygroup=' $paygroup
!       ',$payEndDate=' $payEndDate
!       ',$emplid=' $emplid
!       ',#emplRcd=' #emplRcd
!       ',$beginDate=' $earnsBeginDt
!       ',$endDate=' $earnsEndDt
!       ',$erncd=' $erncd
!       ',$IU_FIN_COA_CD=' $IU_FIN_COA_CD
!       ',$IU_ACCOUNT_NBR=' $IU_ACCOUNT_NBR
!       ',$IU_SUB_ACCT_NBR=' $IU_SUB_ACCT_NBR
!       ',$IU_FIN_OBJECT_CD=' $IU_FIN_OBJECT_CD
!       ',$IU_FIN_SUB_OBJ_CD=' $IU_FIN_SUB_OBJ_CD
!       ',$IU_PROJECT_CD=' $IU_PROJECT_CD
!       ',$IU_ORG_REF_ID=' $IU_ORG_REF_ID
!       ',#IU_HRS_FOR_PRD=' #IU_HRS_FOR_PRD
!       ',$iu_pyfnd_intrfc_id=' $iu_pyfnd_intrfc_id

  begin-sql on-error=SQL_Error
    INSERT INTO TK.TK_IU_PYFND_INTRFC VALUES (
        $company
       ,$paygroup
       ,to_date($payEndDate, 'MM-DD-YYYY')
       ,$emplid
       ,#emplRcd
       ,to_date($earnsBeginDt,'DD-MON-YYYY')
       ,to_date($earnsEndDt,'DD-MON-YYYY')
       ,$erncd
       ,$IU_FIN_COA_CD
       ,$IU_ACCOUNT_NBR
       ,$IU_SUB_ACCT_NBR
       ,$IU_FIN_OBJECT_CD
       ,$IU_FIN_SUB_OBJ_CD
       ,$IU_PROJECT_CD
       ,$IU_ORG_REF_ID
       ,#IU_HRS_FOR_PRD
       ,$iu_pyfnd_intrfc_id)
  end-sql

  add #IU_HRS_FOR_PRD to #_TK_HRS_TOTAL

end-procedure

!***********************************************************************
begin-procedure updatePyfndIntrfc(#remainingHours,$company,$paygroup,$payEndDate,$emplid,#emplRcd,$earnsBeginDt,$earnsEndDt,$erncd,$IU_FIN_COA_CD,$IU_ACCOUNT_NBR,$IU_SUB_ACCT_NBR,$IU_FIN_OBJECT_CD,$IU_FIN_SUB_OBJ_CD,$IU_PROJECT_CD,$IU_ORG_REF_ID)
!***********************************************************************
  begin-sql on-error=SQL_Error
    UPDATE TK.TK_IU_PYFND_INTRFC
    SET IU_HRS_FOR_PRD = IU_HRS_FOR_PRD + #remainingHours
    WHERE COMPANY=$company
      AND PAYGROUP=$paygroup
      AND PAY_END_DT=to_date($payEndDate, 'MM-DD-YYYY')
      AND EMPLID=$emplid
      AND EMPL_RCD=#emplRcd
      AND EARNS_BEGIN_DT = to_date($earnsBeginDt,'DD-MON-YYYY')
      AND EARNS_END_DT= to_date($earnsEndDt,'DD-MON-YYYY')
      AND ERNCD=$erncd
      AND IU_FIN_COA_CD=$IU_FIN_COA_CD local
      AND IU_ACCOUNT_NBR=$IU_ACCOUNT_NBR
      AND IU_SUB_ACCT_NBR=$IU_SUB_ACCT_NBR
      AND IU_FIN_OBJECT_CD=$IU_FIN_OBJECT_CD
      AND IU_FIN_SUB_OBJ_CD=$IU_FIN_SUB_OBJ_CD
      AND IU_PROJECT_CD=$IU_PROJECT_CD
      AND IU_ORG_REF_ID=$IU_ORG_REF_ID
   end-sql
end-procedure

!***********************************************************************
begin-procedure process_TK_IU_PYFND_INTRFC
!***********************************************************************
  begin-select on-error=SQL_Error
T.COMPANY
T.PAYGROUP
T.PAY_END_DT
T.EMPLID
T.EMPL_RCD
T.EARNS_BEGIN_DT
T.EARNS_END_DT
T.ERNCD
T.IU_FIN_COA_CD
T.IU_ACCOUNT_NBR
T.IU_SUB_ACCT_NBR
T.IU_FIN_OBJECT_CD
T.IU_FIN_SUB_OBJ_CD
T.IU_PROJECT_CD
T.IU_ORG_REF_ID
MIN(T.IU_PYFND_INTRFC_ID) &IU_PYFND_INTRFC_ID
SUM(T.IU_HRS_FOR_PRD) &SUM_HOURS

  do get_hourly_rate_from_job   !IU20061120
  do insert_PS_IU_PYFND_INTRFC

FROM TK.TK_IU_PYFND_INTRFC T
WHERE T.PAY_END_DT = to_date($PAY_END_DATE,'MM-DD-YYYY')
GROUP BY COMPANY,PAYGROUP,PAY_END_DT,EMPLID,EMPL_RCD,
         EARNS_BEGIN_DT,EARNS_END_DT,ERNCD,
         IU_FIN_COA_CD,IU_ACCOUNT_NBR,IU_SUB_ACCT_NBR,
         IU_FIN_OBJECT_CD,IU_FIN_SUB_OBJ_CD,IU_PROJECT_CD,
         IU_ORG_REF_ID
  end-select
end-procedure


!***********************************************************************
begin-procedure get_hourly_rate_from_job   !IU20061120
!***********************************************************************

  let #hourly_rt = 0

begin-select
job.hourly_rt

  let #hourly_rt = &job.hourly_rt

FROM sysadm.ps_job job
WHERE job.emplid   = &t.emplid
  AND job.empl_rcd = &t.empl_rcd
  AND job.effdt    = (select max(effdt)  from sysadm.ps_job where emplid=job.emplid and empl_rcd=job.empl_rcd and effdt <= &t.earns_end_dt)
  AND job.effseq   = (select max(effseq) from sysadm.ps_job where emplid=job.emplid and empl_rcd=job.empl_rcd and effdt  = job.effdt)
end-select
end-procedure


!***********************************************************************
begin-procedure insert_PS_IU_PYFND_INTRFC
!***********************************************************************
!    show ' '
!    show 'INSERT INTO PS_IU_PYFND_INTRFC '
!       'COMPANY=' &T.COMPANY
!       ',PAYGROUP=' &T.PAYGROUP
!       ',PAY_END_DT=' &T.PAY_END_DT
!       ',EMPLID=' &T.EMPLID
!       ',EMPL_RCD=' &T.EMPL_RCD
!       ',EARNS_BEGIN_DT=' &T.EARNS_BEGIN_DT
!       ',EARNS_END_DT=' &T.EARNS_END_DT
!       ',ERNCD=' &T.ERNCD
!       ',IU_FIN_COA_CD=' &T.IU_FIN_COA_CD
!       ',IU_ACCOUNT_NBR=' &T.IU_ACCOUNT_NBR
!       ',IU_SUB_ACCT_NBR=' &T.IU_SUB_ACCT_NBR
!       ',IU_FIN_OBJECT_CD=' &T.IU_FIN_OBJECT_CD
!       ',IU_FIN_SUB_OBJ_CD=' &T.IU_FIN_SUB_OBJ_CD
!       ',IU_PROJECT_CD=' &T.IU_PROJECT_CD
!       ',IU_ORG_REF_ID=' &T.IU_ORG_REF_ID
!       ',IU_PYFND_INTRFC_ID=' &IU_PYFND_INTRFC_ID
!       ',SUM_HOURS=' &SUM_HOURS

  begin-sql on-error=SQL_Error
    INSERT INTO SYSADM.PS_IU_PYFND_INTRFC
       (COMPANY
       ,PAYGROUP
       ,PAY_END_DT
       ,OFF_CYCLE
       ,EMPLID
       ,EMPL_RCD
       ,EARNS_BEGIN_DT
       ,EARNS_END_DT
       ,ERNCD
       ,IU_ORDER
       ,IU_FIN_COA_CD
       ,IU_ACCOUNT_NBR
       ,IU_SUB_ACCT_NBR
       ,IU_FIN_OBJECT_CD
       ,IU_FIN_SUB_OBJ_CD
       ,IU_PROJECT_CD
       ,IU_ORG_REF_ID
       ,PAGE_NUM
       ,LINE_NUM
       ,EMPL_RCD_OTH
       ,ADDL_NBR
       ,ADDL_SEQ
       ,IU_HRS_FOR_PRD
       ,RATE
       ,AMOUNT
       ,PERCENTAGE
       ,IU_PYFND_INTRFC_ID
       ,IU_PYFND_STATUS
       ,IU_CREATED_OPRID
       ,DTTM_CREATED
       ,LAST_UPDT_OPRID
       ,LAST_UPDT_DTTM
       ,IU_PYFND_PRCS_MSG
       ,IU_BILL_DEPT
       ,IU_VCHR_TBL_CD
       ,GROSSUP
       ,IU_ADJ_VCHR_TYPE
       ,DESCR254
     )
     VALUES (
        &T.COMPANY
       ,&T.PAYGROUP
       ,&T.PAY_END_DT
       ,'N'              !OFF_CYCLE
       ,&T.EMPLID
       ,&T.EMPL_RCD
       ,&T.EARNS_BEGIN_DT
       ,&T.EARNS_END_DT
       ,&T.ERNCD
       ,1                !IU_ORDER
       ,&T.IU_FIN_COA_CD
       ,&T.IU_ACCOUNT_NBR
       ,&T.IU_SUB_ACCT_NBR
       ,&T.IU_FIN_OBJECT_CD
       ,&T.IU_FIN_SUB_OBJ_CD
       ,&T.IU_PROJECT_CD
       ,&T.IU_ORG_REF_ID
       ,0                !PAGE_NUM
       ,0                !LINE_NUM
       ,0                !EMPL_RCD_OTH
       ,0                !ADDL_NBR
       ,0                !ADDL_SEQ
       ,&SUM_HOURS
       ,#hourly_rt       !RATE               !IU20061120
       ,0                !AMOUNT
       ,0                !PERCENTAGE
       ,&IU_PYFND_INTRFC_ID
       ,'U'              !IU_PYFND_STATUS
       ,'TIME'           !IU_CREATED_OPRID
       ,SYSDATE          !DTTM_CREATED
       ,'TIME'           !LAST_UPDT_OPRID
       ,SYSDATE          !LAST_UPDT_DTTM
       ,' '              !IU_PYFND_PRCS_MSG
       ,' '              !IU_BILL_DEPT
       ,' '              !IU_VCHR_TBL_CD
       ,' '              !GROSSUP
       ,' '              !IU_ADJ_VCHR_TYPE
       ,' '              !DESCR254
    )
  end-sql

  add &SUM_HOURS to #PS_HRS_TOTAL

end-procedure


!****************************************************************
Begin-Procedure update_funding_percentages   !IU20061120
!****************************************************************

  let #erncd_hours_sum  = 0
  let #erncd_rows_count = 0

begin-select
perc.company
perc.paygroup
to_char(perc.pay_end_dt,'MM-DD-YYYY')     &perc_pay_end_dt
perc.off_cycle
perc.emplid
perc.empl_rcd
to_char(perc.earns_begin_dt,'MM-DD-YYYY') &perc_earns_begin_dt
to_char(perc.earns_end_dt,'MM-DD-YYYY')   &perc_earns_end_dt
perc.erncd
sum(perc.iu_hrs_for_prd) &erncd_hours_sum
count(*)                 &erncd_rows_count

  let #erncd_hours_sum  = &erncd_hours_sum
  let #erncd_rows_count = &erncd_rows_count
  do process_percentages

FROM sysadm.ps_iu_pyfnd_intrfc perc
WHERE perc.company    = 'IU'
  AND perc.paygroup   = 'BW1'
  AND perc.pay_end_dt = to_date($PAY_END_DATE,'MM-DD-YYYY')
  AND perc.off_cycle  = 'N'
  AND substr(perc.iu_pyfnd_intrfc_id,1,2) = 'TK'
GROUP BY perc.company,perc.paygroup,perc.pay_end_dt,perc.off_cycle
         ,perc.emplid,perc.empl_rcd,perc.earns_begin_dt,perc.earns_end_dt,perc.erncd
end-select
end-procedure


!****************************************************************
Begin-Procedure process_percentages   !IU20061120
!****************************************************************

  let #running_count   = 0
  let #running_pct_sum = 0
  let #these_hours     = 0
  let #this_percent    = 0

begin-select
hrs.company
hrs.paygroup
to_char(hrs.pay_end_dt,'MM-DD-YYYY')     &hrs_pay_end_dt
hrs.off_cycle
hrs.emplid
hrs.empl_rcd
to_char(hrs.earns_begin_dt,'MM-DD-YYYY') &hrs_earns_begin_dt
to_char(hrs.earns_end_dt,'MM-DD-YYYY')   &hrs_earns_end_dt
hrs.erncd
hrs.iu_order
hrs.iu_fin_coa_cd
hrs.iu_account_nbr
hrs.iu_sub_acct_nbr
hrs.iu_fin_object_cd
hrs.iu_fin_sub_obj_cd
hrs.iu_project_cd
hrs.iu_org_ref_id
hrs.page_num
hrs.line_num
hrs.empl_rcd_oth
hrs.iu_hrs_for_prd

  add 1 to #running_count

  let #these_hours  = &hrs.iu_hrs_for_prd
  if #erncd_hours_sum <> 0                                                 !IU20060116
    let #this_percent = round(((#these_hours / #erncd_hours_sum) * 100),2)
  else
    let #this_percent = 0
  end-if

  add #this_percent to #running_pct_sum
  if #running_count = #erncd_rows_count
    let #this_percent = #this_percent + (100 - #running_pct_sum) !this should handle sums that run over 100 as well
  end-if

  do update_pyfnd_intrfc_percentage_sql

FROM sysadm.ps_iu_pyfnd_intrfc hrs
WHERE hrs.company        = &perc.company
  AND hrs.paygroup       = &perc.paygroup
  AND hrs.pay_end_dt     = to_date(&perc_pay_end_dt,'MM-DD-YYYY')
  AND hrs.off_cycle      = &perc.off_cycle
  and hrs.emplid         = &perc.emplid
  and hrs.empl_rcd       = &perc.empl_rcd
  and hrs.earns_begin_dt = to_date(&perc_earns_begin_dt,'MM-DD-YYYY')
  and hrs.earns_end_dt   = to_date(&perc_earns_end_dt,'MM-DD-YYYY')
  and hrs.erncd          = &perc.erncd
  and substr(hrs.iu_pyfnd_intrfc_id,1,2) = 'TK'
order by hrs.company,hrs.paygroup,hrs.pay_end_dt,hrs.off_cycle
         ,hrs.emplid,hrs.empl_rcd,hrs.earns_begin_dt,hrs.earns_end_dt,hrs.erncd
         ,hrs.iu_order,hrs.iu_fin_coa_cd,hrs.iu_account_nbr,hrs.iu_sub_acct_nbr
         ,hrs.iu_fin_object_cd,hrs.iu_fin_sub_obj_cd,hrs.iu_project_cd,hrs.iu_org_ref_id
         ,hrs.page_num,hrs.line_num,hrs.empl_rcd_oth
end-select

end-procedure


!****************************************************************
Begin-Procedure update_pyfnd_intrfc_percentage_sql   !IU20061120
!****************************************************************

begin-sql on-error=SQL_Error
update sysadm.ps_iu_pyfnd_intrfc uipi set percentage = #this_percent
WHERE uipi.company           = &hrs.company
  AND uipi.paygroup          = &hrs.paygroup
  AND uipi.pay_end_dt        = to_date(&hrs_pay_end_dt,'MM-DD-YYYY')
  AND uipi.off_cycle         = &hrs.off_cycle
  and uipi.emplid            = &hrs.emplid
  and uipi.empl_rcd          = &hrs.empl_rcd
  and uipi.earns_begin_dt    = to_date(&hrs_earns_begin_dt,'MM-DD-YYYY')
  and uipi.earns_end_dt      = to_date(&hrs_earns_end_dt,'MM-DD-YYYY')
  and uipi.erncd             = &hrs.erncd
  and uipi.iu_order          = &hrs.iu_order
  and uipi.iu_fin_coa_cd     = &hrs.iu_fin_coa_cd
  and uipi.iu_account_nbr    = &hrs.iu_account_nbr
  and uipi.iu_sub_acct_nbr   = &hrs.iu_sub_acct_nbr
  and uipi.iu_fin_object_cd  = &hrs.iu_fin_object_cd
  and uipi.iu_fin_sub_obj_cd = &hrs.iu_fin_sub_obj_cd
  and uipi.iu_project_cd     = &hrs.iu_project_cd
  and uipi.iu_org_ref_id     = &hrs.iu_org_ref_id
  and uipi.page_num          = &hrs.page_num
  and uipi.line_num          = &hrs.line_num
  and uipi.empl_rcd_oth      = &hrs.empl_rcd_oth
end-sql
end-procedure


!****************************************************************              ! IU20070329
begin-procedure insert-error($emplid,$ERROR_MSG)                               ! IU20070329
!****************************************************************              ! IU20070329
                                                                               ! IU20070329
begin-sql on-error=SQL_Error                                                   ! IU20070329
  INSERT INTO TK.TK_BATCH_MESSAGE_T (                                          ! IU20070329
    MESSAGE_ID,                                                                ! IU20070329
    PROCESS_NAME,                                                              ! IU20070329
    PROCESS_DATE,                                                              ! IU20070329
    DOCUMENT_ID,                                                               ! IU20070329
    EMPLID,                                                                    ! IU20070329
    MESSAGE                                                                    ! IU20070329
  ) VALUES (                                                                   ! IU20070329
    TK_MESSAGE_ID_SEQ.nextval,                                                 ! IU20070329
    'Extract to PeopleSoft',                                                   ! IU20070329
    TRUNC(SYSDATE),                                                            ! IU20070329
    NULL,                                                                      ! IU20070329
    $emplid,                                                                   ! IU20070329
    $ERROR_MSG                                                                 ! IU20070329
  )                                                                            ! IU20070329
end-sql                                                                        ! IU20070329
                                                                               ! IU20070329
end-procedure                                                                  ! IU20070329

!****************************************************************
Begin-Procedure SQL_Error
!****************************************************************
Show 'SQL Error: ' $sql-error
Show 'SQL Status: ' #sql-status
stop
End-Procedure ! SQL_Error

!***********************************************************************
! End of Program
!***********************************************************************
