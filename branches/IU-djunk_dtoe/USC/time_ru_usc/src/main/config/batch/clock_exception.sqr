!***********************************************************************
!  CLOCK_EXCEPTION.SQR -- Populate exception tables with timesheet
!                         exceptions.
!***********************************************************************
!  Programmer  :  Jim Nelson
!  Date        :  2006-JUN-09
!  Project Name:
!  Description :
!  Notes       :
!
!
!***********************************************************************
!  INDIANA UNIVERSITY MODIFICATION HISTORY
!***********************************************************************
!  Programmer  :
!  Date        :
!  Description :
!
!***********************************************************************


!***********************************************************************
begin-report
  do Main
end-report
!***********************************************************************


!***********************************************************************
! Procedure Name : Main
! Description    : Variable initialization performed here
!***********************************************************************
begin-procedure Main

BEGIN-SELECT
to_char(SYSDATE-1,'YYYYMMDD') &yesterday
to_char(SYSDATE-2,'YYYYMMDD') &todayminus2
to_char(SYSDATE,  'YYYYMMDD') &today

  let $yesterday = &yesterday
  let $today     = &today
  let $todayminus2 = &todayminus2

  show 'yesterday ' $yesterday
  show 'todayminus2 ' $todayminus2
  show 'today     ' $today

  let $min_earliest_time_block_start = $yesterday || ' 00:00:00'
  let $max_latest_time_block_end = $yesterday || ' 23:59:59'
  let $max_less_ten_hours = $yesterday || ' 13:59:59'
  let $todayminus2_at_two = $todayminus2  || ' 13:59:59'                       

FROM DUAL
END-SELECT

!asn ! A. Neal - Code added for Testing                                              !asn
!asn                                                                                 !asn    
!asn let $asn_date       = '20061009'                                                !asn
!asn                                                                                 !asn
!asn while 1=1                                                                       !asn
!asn   add 1 to #i                                                                   !asn
!asn   if #i > 14                                                                    !asn
!asn     break                                                                       !asn
!asn   end-if                                                                        !asn
!asn                                                                                 !asn
!asn begin-select                                                                    !asn
!asn to_char((to_date($asn_date,'yyyymmdd') - 1),'yyyymmdd') &asn_yesterday          !asn
!asn to_char(to_date($asn_date,'yyyymmdd'),'yyyymmdd') &asn_today                    !asn
!asn to_char((to_date($asn_date,'yyyymmdd') + 1),'yyyymmdd') &asn_tomorrow           !asn
!asn to_char((to_date($asn_date,'yyyymmdd') - 2),'yyyymmdd') &asn_todayminus2        !asn
!asn from dual                                                                       !asn
!asn end-select                                                                      !asn
!asn                                                                                 !asn
!asn   let $yesterday = &asn_yesterday                                               !asn
!asn   let $today     = &asn_today                                                   !asn   
!asn   let $asn_date  = &asn_tomorrow                                                !asn 
!asn   let $todayminus2 = &asn_todayminus2                                           !asn
!asn                                                                                 !asn
!asn   let $min_earliest_time_block_start = $yesterday || ' 00:00:00'                !asn 
!asn   let $max_latest_time_block_end = $yesterday || ' 23:59:59'                    !asn
!asn   let $max_less_ten_hours = $yesterday || ' 13:59:59'                           !asn 
!asn   let $todayminus2_at_two = $todayminus2  || ' 13:59:59'                        !asn
!asn                                                                                 !asn
!asn                                                                                 !asn
!asn   show '-----------------------------------'                                    !asn
!asn   show 'yesterday ' $yesterday                                                  !asn
!asn   show 'today ' $today                                                          !asn
!asn   show '-----------------------------------'                                    !asn
!asn 

  do Get-Distinct-Clock-Log-Empls-Thru-Work-Area
  do Missed-Clock-Exception

!asn 
!asn begin-sql                                                                       !asn
!asn commit                                                                          !asn
!asn end-sql                                                                         !asn
!asn                                                                                 !asn 
!asn end-while                                                                       !asn

end-procedure ! Main



!***********************************************************************
! Procedure Name : Get-Distinct-Clock-Log-Empls-Thru-Work-Area
! Description    :
!***********************************************************************
begin-procedure Get-Distinct-Clock-Log-Empls-Thru-Work-Area


   show 'min earliest time block ' $min_earliest_time_block_start              !asn
   show 'max latest time block ' $max_latest_time_block_end                    !asn
   show 'max less 10 hours ' $max_less_ten_hours                               !asn

BEGIN-SELECT DISTINCT
CL_TWA.EMPLID
CL_TWA.EMPL_RCD
CL_TWA.WORK_AREA_ID
J.DEPTID

 
  let $emplid                         = &CL_TWA.EMPLID
  let #empl_rcd                       = &CL_TWA.EMPL_RCD
  let #work_area_id                   = &CL_TWA.WORK_AREA_ID
  let $deptid                         = &J.DEPTID

  do Find-Best-Match-Clock-Location-Rule

FROM TK_CLOCK_LOG_T CL_TWA, SYSADM.PS_JOB J
WHERE CL_TWA.CLOCK_TS BETWEEN to_date($min_earliest_time_block_start,'YYYYMMDD hh24:mi:ss') AND to_date($max_latest_time_block_end,'YYYYMMDD hh24:mi:ss')
AND CL_TWA.CLOCK_ACTION_CD ='CI'
AND J.EMPLID=CL_TWA.EMPLID
AND J.EMPL_rCD=CL_TWA.EMPL_rCD
AND J.EFFDT = (SELECT MAX(JD.EFFDT) FROM SYSADM.PS_JOB JD WHERE JD.EMPLID=J.EMPLID AND JD.EMPL_RCD=J.EMPL_rCD AND JD.EFFDT<=to_date($min_earliest_time_block_start,'YYYYMMDD hh24:mi:ss'))
AND J.EFFSEQ = (SELECT MAX(JS.EFFSEQ) FROM SYSADM.PS_JOB JS WHERE JS.EMPLID=J.EMPLID AND JS.EMPL_RCD=J.EMPL_RCD AND JS.EFFDT=J.EFFDT)
ORDER BY CL_TWA.EMPLID,
         CL_TWA.EMPL_RCD,
         CL_TWA.WORK_AREA_ID
END-SELECT

end-procedure ! Get-Distinct-Clock-Log-Empls-Thru-Work-Area



!***********************************************************************
! Procedure Name : Find-Best-Match-Clock-Location-Rule
! Description    :
!***********************************************************************
begin-procedure Find-Best-Match-Clock-Location-Rule

let $found_matching_rule = 'N'

!Most selective rule uses emplid/empl_rcd/work_area_id/deptid
let $where_clause = 'AND CLR.EMPLID = ''' || $emplid || ''' AND CLR.EMPL_RCD = ' || to_char(#empl_rcd) || ' AND CLR.WORK_AREA_ID = ' || to_char(#work_area_id) || ' AND CLR.DEPTID = ''' || $deptid || ''''
do Find-Clock-Location-Rule

if ($found_matching_rule = 'N')
  !no luck, so look based on empld/work_area_id/deptid (-1 is empl_rcd wildcard)
  let $where_clause = 'AND CLR.EMPLID = ''' || $emplid || ''' AND CLR.EMPL_RCD = -1 AND CLR.WORK_AREA_ID = ' || to_char(#work_area_id) || ' AND CLR.DEPTID = ''' || $deptid || ''''
  do Find-Clock-Location-Rule
end-if

if ($found_matching_rule = 'N')
  !no luck, so look based on work_area_id/deptid (@ is emplid wildcard, -1 is empl_rcd wildcard)
  let $where_clause = 'AND CLR.EMPLID = ''@'' AND CLR.EMPL_RCD = -1 AND CLR.WORK_AREA_ID = ' || to_char(#work_area_id) || ' AND CLR.DEPTID = ''' || $deptid || ''''
  do Find-Clock-Location-Rule
end-if

if ($found_matching_rule = 'N')
  !no luck, so look based on deptid (@ is emplid wildcard, -1 is empl_rcd wildcard, -1 is work_area_id wildcard)
  let $where_clause = 'AND CLR.EMPLID = ''@'' AND CLR.EMPL_RCD = -1 AND CLR.WORK_AREA_ID = -1 AND CLR.DEPTID = ''' || $deptid || ''''
  do Find-Clock-Location-Rule
end-if

end-procedure   ! Find-Best-Match-Clock-Location-Rule



!***********************************************************************
! Procedure Name : Find-Clock-Location-Rule
! Description    :
!***********************************************************************
begin-procedure Find-Clock-Location-Rule

let $ip_where = ' ('

BEGIN-SELECT
CLR.IP_ADDRESS

  let $found_matching_rule            = 'Y'
  let $rule_ip_address                = &CLR.IP_ADDRESS

  let $ip_where = $ip_where || ' ''' || $rule_ip_address || ''','

FROM TK_CLOCK_LOCATION_RL_T CLR
WHERE CLR.EFFDT = (SELECT MAX(CLRD.EFFDT)
                   FROM TK_CLOCK_LOCATION_RL_T CLRD
                   WHERE CLRD.DEPTID = CLR.DEPTID
                     AND CLRD.WORK_AREA_ID = CLR.WORK_AREA_ID
                     AND CLRD.EMPLID = CLR.EMPLID
                     AND CLRD.EMPL_RCD = CLR.EMPL_RCD
                     AND CLRD.IP_ADDRESS = CLR.IP_ADDRESS
                     AND CLRD.EFFDT <= to_date($yesterday,'yyyymmdd'))
  AND CLR.EFFSEQ = (SELECT MAX(CLRS.EFFSEQ)
                    FROM TK_CLOCK_LOCATION_RL_T CLRS
                    WHERE CLRS.DEPTID = CLR.DEPTID
                      AND CLRS.WORK_AREA_ID = CLR.WORK_AREA_ID
                      AND CLRS.EMPLID = CLR.EMPLID
                      AND CLRS.EMPL_RCD = CLR.EMPL_RCD
                      AND CLRS.IP_ADDRESS = CLR.IP_ADDRESS
                      AND CLRS.EFFDT = CLR.EFFDT)
   AND CLR.EFF_STATUS = 'A'
   [$where_clause]
END-SELECT

let $ip_where = $ip_where || '''-1'')'

if ($found_matching_rule = 'Y')
  do Clock-Location-Exception
end-if

end-procedure ! Find-Clock-Location-Rule



!***********************************************************************
! Procedure Name : Missed-Clock-Exception
! Description    :
!***********************************************************************
begin-procedure Missed-Clock-Exception

! I'm ignoring time spent out to lunch - is that okay? (In A 12-jun-2006 email, damon
! said it's ok to ignore time spent out to lunch, so this example empl would
! appear on the report:
!  	14:00 - clock in
!  	18:00 - lunch out
!  	19:00 - lunch in )


let $exception_type = 'MCO'

BEGIN-SELECT
CLOCK_LOG_A.EMPLID
CLOCK_LOG_A.EMPL_RCD
to_char(J.EFFDT,'yyyymmdd') &J.EFFDT
J.EFFSEQ
CLOCK_LOG_A.WORK_AREA_ID
CLOCK_LOG_A.TASK_ID
to_char(CLOCK_LOG_A.CLOCK_TS,'yyyymmdd hh24:mi:ss') &ts

  let $emplid = &CLOCK_LOG_A.EMPLID
  let #empl_rcd = &CLOCK_LOG_A.EMPL_RCD
  let #work_area_id = &CLOCK_LOG_A.WORK_AREA_ID
  let $task_id = to_char(round(&CLOCK_LOG_A.TASK_ID,0))
  let $ts = &ts
  let $effdt = &J.EFFDT
  let #effseq = &J.EFFSEQ

  do Insert-Missed-Clock-Exception

FROM
    TK.TK_CLOCK_LOG_T CLOCK_LOG_A, HRE.HRE_TK_JOB_T J
WHERE
    J.EMPLID = CLOCK_LOG_A.EMPLID AND
    J.EMPL_RCD = CLOCK_LOG_A.EMPL_RCD AND
    J.EFFDT = (SELECT MAX(JD.EFFDT) FROM HRE.HRE_TK_JOB_T JD WHERE JD.EMPLID=J.EMPLID AND JD.EMPL_RCD=J.EMPL_RCD AND JD.EFFDT<=CLOCK_LOG_A.CLOCK_TS) AND
    J.EFFSEQ = (SELECT MAX(JS.EFFSEQ) FROM HRE.HRE_TK_JOB_T JS WHERE JS.EMPLID=J.EMPLID AND JS.EMPL_RCD=J.EMPL_RCD AND JS.EFFDT=J.EFFDT) AND
    CLOCK_LOG_A.CLOCK_TS BETWEEN to_date($todayminus2_at_two,'yyyymmdd hh24:mi:ss') AND to_date($max_latest_time_block_end,'yyyymmdd hh24:mi:ss') AND
    CLOCK_LOG_A.CLOCK_ACTION_CD = 'CI' AND
    CLOCK_LOG_A.CLOCK_TS <= to_date($max_less_ten_hours,'yyyymmdd hh24:mi:ss')
    AND NOT EXISTS (SELECT
                        'X'
                    FROM
                        TK.TK_CLOCK_LOG_T CLOCK_LOG_B
                    WHERE
                        CLOCK_LOG_B.EMPLID = CLOCK_LOG_A.EMPLID AND
                        CLOCK_LOG_B.EMPL_RCD = CLOCK_LOG_A.EMPL_RCD AND
                        CLOCK_LOG_B.WORK_AREA_ID = CLOCK_LOG_A.WORK_AREA_ID AND
                        CLOCK_LOG_B.TASK_ID = CLOCK_LOG_A.TASK_ID AND
                        CLOCK_LOG_B.CLOCK_ACTION_CD = 'CO' AND
                        CLOCK_LOG_B.CLOCK_TS > CLOCK_LOG_A.CLOCK_TS AND
                        CLOCK_LOG_B.CLOCK_TS <= to_date($max_latest_time_block_end,'yyyymmdd hh24:mi:ss'))
END-SELECT

end-procedure ! Missed-Clock-Exception



!***********************************************************************
! Procedure Name : Clock-Location-Exception
! Description    :
!***********************************************************************
begin-procedure Clock-Location-Exception

let $exception_type = 'UCL'

BEGIN-SELECT
CLOCK_LOG_LOC.EMPLID
CLOCK_LOG_LOC.EMPL_RCD
to_char(JA.EFFDT,'yyyymmdd') &JA.EFFDT
JA.EFFSEQ
CLOCK_LOG_LOC.CLOCK_ACTION_CD
CLOCK_LOG_LOC.WORK_AREA_ID
CLOCK_LOG_LOC.TASK_ID
to_char(CLOCK_LOG_LOC.CLOCK_TS,'yyyymmdd hh24:mi:ss') &clts
CLOCK_LOG_LOC.IP_ADDRESS

  let $emplid = &CLOCK_LOG_LOC.EMPLID
  let #empl_rcd = &CLOCK_LOG_LOC.EMPL_RCD
  let #work_area_id = &CLOCK_LOG_LOC.WORK_AREA_ID
  let $task_id = to_char(round(&CLOCK_LOG_LOC.TASK_ID,0))
  let $clock_action_cd = &CLOCK_LOG_LOC.CLOCK_ACTION_CD
  let $log_ip_address  = &CLOCK_LOG_LOC.IP_ADDRESS
  let $ts = &clts
  let $effdt = &JA.EFFDT
  let #effseq = &JA.EFFSEQ

  do Insert-Clock-Location-Exception

FROM TK_CLOCK_LOG_T CLOCK_LOG_LOC, HRE.HRE_TK_JOB_T JA
WHERE CLOCK_LOG_LOC.EMPLID = $emplid
  AND CLOCK_LOG_LOC.EMPL_RCD = #empl_rcd
  AND CLOCK_LOG_LOC.WORK_AREA_ID = #work_area_id
  AND JA.EMPLID=CLOCK_LOG_LOC.EMPLID
  AND JA.EMPL_RCD=CLOCK_LOG_LOC.EMPL_RCD
  AND JA.EFFDT = (SELECT MAX(JAD.EFFDT) FROM HRE.HRE_TK_JOB_T JAD WHERE JAD.EMPLID=JA.EMPLID AND JAD.EMPL_RCD=JA.EMPL_RCD AND JAD.EFFDT<=CLOCK_LOG_LOC.CLOCK_TS)
  AND JA.EFFSEQ = (SELECT MAX(JAS.EFFSEQ) FROM HRE.HRE_TK_JOB_T JAS WHERE JAS.EMPLID=JA.EMPLID AND JAS.EMPL_RCD=JA.EMPL_RCD AND JAS.EFFDT=JA.EFFDT)
  AND CLOCK_LOG_LOC.CLOCK_TS BETWEEN to_date($min_earliest_time_block_start,'yyyymmdd hh24:mi:ss') AND to_date($max_latest_time_block_end,'yyyymmdd hh24:mi:ss')
  AND CLOCK_LOG_LOC.IP_ADDRESS NOT IN [$ip_where]
ORDER BY CLOCK_LOG_LOC.CLOCK_TS
END-SELECT

end-procedure ! Clock-Location-Exception



!***********************************************************************
! Procedure Name : Insert-Missed-Clock-Exception
! Description    : SQL to insert an exception
!***********************************************************************
begin-procedure Insert-Missed-Clock-Exception

BEGIN-SQL ON-ERROR=SQL_Error 
INSERT INTO TK.TK_MISSED_CLOCK_EXCEPTION_T
(
EXCEPTION_DT,
EXCEPTION_TYPE,
EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
WORK_AREA_ID,
TASK_ID,
CLOCK_TS
)
VALUES
(
to_date($today,'yyyymmdd'),
$exception_type,
$emplid,
#empl_rcd,
TO_DATE($effdt,'yyyymmdd'),
#effseq,
to_char(#work_area_id),
$task_id,
to_date($ts,'yyyymmdd hh24:mi:ss')
)
END-SQL

end-procedure ! Insert-Missed-Clock-Exception



!***********************************************************************
! Procedure Name : Insert-Clock-Location-Exception
! Description    : SQL to insert an exception
!***********************************************************************
begin-procedure Insert-Clock-Location-Exception

BEGIN-SQL ON-ERROR=SQL_Error 
INSERT INTO TK.TK_CLOCK_LOCATION_EXCEPTION_T
(
EXCEPTION_DT,
EXCEPTION_TYPE,
EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
WORK_AREA_ID,
TASK_ID,
CLOCK_TS,
CLOCK_ACTION_CD,
IP_ADDRESS
)
VALUES
(
to_date($today,'yyyymmdd'),
$exception_type,
$emplid,
#empl_rcd,
TO_DATE($effdt,'yyyymmdd'),
#effseq,
to_char(#work_area_id),
$task_id,
to_date($ts,'yyyymmdd hh24:mi:ss'),
$clock_action_cd,
$log_ip_address
)
END-SQL

end-procedure ! Insert-Clock-Location-Exception

begin-procedure SQL_error

if substr($sql-error,1,9) = 'ORA-00001'
   ! ignore unique constraints
else
   Show 'SQL Error: ' $sql-error
   Show 'SQL Status: ' #sql-status
   stop
end-if

end-Procedure ! SQL_Error





