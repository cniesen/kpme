 !***********************************************************************
!  LUNCH_EXCEPTION.SQR -- Populate exception tables with timesheet
!                         exceptions.
!***********************************************************************
!  Programmer  :  Jim Nelson
!  Date        :  2006-MAY-26
!  Project Name:
!  Description :
!  Notes       :
!
!
!***********************************************************************
!  INDIANA UNIVERSITY MODIFICATION HISTORY
!***********************************************************************
!  Programmer  :
!  Date        :
!  Description :
!
!***********************************************************************



!***********************************************************************
! #includes
!#include 'setenv.sqc'    !Set environment
!#include 'setup32.sqc'   !Printer and page-size initialization
!#include 'datetime.sqc'  !Routines for date and time formatting
!#include 'datemath.sqc'  !Routines for date and time calculations
!#include 'datewrk.sqc'   !Routines for date and time calculations
!***********************************************************************


!***********************************************************************
begin-report
  do Main
end-report
!***********************************************************************


!***********************************************************************
! Procedure Name : Main
! Description    : Variable initialization performed here
!***********************************************************************
begin-procedure Main

BEGIN-SELECT
to_char(SYSDATE-1,'YYYYMMDD') &yesterday
to_char(SYSDATE,  'YYYYMMDD') &today
to_char(SYSDATE+1,'YYYYMMDD') &tomorrow

  let $yesterday = &yesterday
  let $today     = &today
  let $tomorrow  = &tomorrow

  !let $yesterday = '20060530'
  !let $today     = '20060531'
  show 'yesterday ' $yesterday
  show 'today     ' $today
  show 'tomorrow  ' $tomorrow

  let $min_earliest_time_block_start = $yesterday || ' 00:00:00'
  let $max_latest_time_block_end = $yesterday || ' 23:59:59'

FROM DUAL
END-SELECT

!asn ! A. Neal - Code added for Testing                                              !asn
!asn                                                                                 !asn    
!asn let $asn_date       = '20061009'                                                !asn
!asn while 1=1                                                                       !asn
!asn   add 1 to #i                                                                   !asn
!asn   if #i > 14                                                                    !asn
!asn     break                                                                       !asn
!asn   end-if                                                                        !asn
!asn                                                                                 !asn
!asn begin-select                                                                    !asn
!asn to_char((to_date($asn_date,'yyyymmdd') - 1),'yyyymmdd') &asn_yesterday          !asn
!asn to_char(to_date($asn_date,'yyyymmdd'),'yyyymmdd') &asn_today                    !asn
!asn to_char((to_date($asn_date,'yyyymmdd') + 1),'yyyymmdd') &asn_tomorrow           !asn
!asn from dual                                                                       !asn
!asn end-select                                                                      !asn
!asn                                                                                 !asn
!asn   let $yesterday = &asn_yesterday                                               !asn
!asn   let $today     = &asn_today                                                   !asn   
!asn   let $asn_date  = &asn_tomorrow                                                !asn
!asn                                                                                 !asn
!asn   let $min_earliest_time_block_start = $yesterday || ' 00:00:00'                !asn 
!asn   let $max_latest_time_block_end = $yesterday || ' 23:59:59'                    !asn
!asn                                                                                 !asn
!asn                                                                                 !asn
!asn   show '-----------------------------------'                                    !asn
!asn   show 'yesterday ' $yesterday                                                  !asn
!asn   show 'today ' $today                                                          !asn
!asn   show '-----------------------------------'                                    !asn

  do Get-System-Lunch-Rule
  do Get-Distinct-Clock-Log-Empls-Thru-Work-Area
  
!asn begin-sql                                                                       !asn
!asn commit                                                                          !asn
!asn end-sql                                                                         !asn
!asn                                                                                 !asn 
!asn end-while    

end-procedure ! Main



!***********************************************************************
! Procedure Name : Get-Distinct-Clock-Log-Empls-Thru-Work-Area
! Description    :
!***********************************************************************
begin-procedure Get-Distinct-Clock-Log-Empls-Thru-Work-Area

show 'In Get-Distinct-Clock-Log-Empls-Thru-Work-Area'

BEGIN-SELECT DISTINCT
CL_TWA.EMPLID
CL_TWA.EMPL_RCD
CL_TWA.WORK_AREA_ID
WAT.DEPTID
to_char(J.EFFDT,'yyyymmdd') &J.EFFDT
J.EFFSEQ

  let $emplid                         = &CL_TWA.EMPLID
  let #empl_rcd                       = &CL_TWA.EMPL_RCD
  let #work_area_id                   = &CL_TWA.WORK_AREA_ID
  let $deptid                         = &WAT.DEPTID
  let $effdt                          = &J.EFFDT
  let #effseq                         = &J.EFFSEQ

  do Find-Best-Match-Lunch-Rules

FROM TK_CLOCK_LOG_T CL_TWA, TK_WORK_AREA_T WAT, HRE.HRE_TK_JOB_T J
WHERE CL_TWA.CLOCK_TS BETWEEN to_date($min_earliest_time_block_start,'YYYYMMDD hh24:mi:ss') AND to_date($max_latest_time_block_end,'YYYYMMDD hh24:mi:ss')
AND WAT.WORK_AREA_ID = CL_TWA.WORK_AREA_ID
AND WAT.EFFDT = (SELECT MAX(WATD.EFFDT) FROM TK_WORK_AREA_T WATD WHERE WATD.WORK_AREA_ID=WAT.WORK_AREA_ID AND WATD.EFFDT <= to_date($min_earliest_time_block_start,'YYYYMMDD hh24:mi:ss'))
AND WAT.EFFSEQ = (SELECT MAX(WATS.EFFSEQ) FROM TK_WORK_AREA_T WATS WHERE WATS.WORK_AREA_ID=WAT.WORK_AREA_ID AND WATS.EFFDT = WAT.EFFDT)
AND WAT.EFF_STATUS = 'A'
AND CL_TWA.CLOCK_ACTION_CD = 'CI'
AND J.EMPLID = CL_TWA.EMPLID
AND J.EMPL_RCD = CL_TWA.EMPL_RCD
AND J.EFFDT = (SELECT MAX(JD.EFFDT) FROM HRE.HRE_TK_JOB_T JD WHERE JD.EMPLID=J.EMPLID AND JD.EMPL_RCD=J.EMPL_RCD AND JD.EFFDT <= CL_TWA.CLOCK_TS)
AND J.EFFSEQ = (SELECT MAX(JS.EFFSEQ) FROM HRE.HRE_TK_JOB_T JS WHERE JS.EMPLID=J.EMPLID AND JS.EMPL_RCD=J.EMPL_RCD AND JS.EFFDT=J.EFFDT)
ORDER BY CL_TWA.EMPLID,
         CL_TWA.EMPL_RCD,
         CL_TWA.WORK_AREA_ID
END-SELECT

end-procedure ! Get-Distinct-Clock-Log-Empls-Thru-Work-Area



!***********************************************************************
! Procedure Name : Get-System-Lunch-Rule
! Description    :
!***********************************************************************
begin-procedure Get-System-Lunch-Rule

let #system_block_hrs = 0
let #system_min_mins = 0

BEGIN-SELECT
SLR.BLOCK_HRS
SLR.MIN_MINS

  let #system_block_hrs = &SLR.BLOCK_HRS
  let #system_min_mins = &SLR.MIN_MINS

FROM TK.TK_SYSTEM_LUNCH_RL_T SLR
WHERE SLR.EFFDT = (SELECT MAX(SLRD.EFFDT) FROM TK.TK_SYSTEM_LUNCH_RL_T SLRD WHERE SLRD.EFFDT <= to_date($min_earliest_time_block_start,'YYYYMMDD hh24:mi:ss'))
  AND SLR.EFFSEQ = (SELECT MAX(SLRE.EFFSEQ) FROM TK.TK_SYSTEM_LUNCH_RL_T SLRE WHERE SLRE.EFFDT = SLR.EFFDT)
  AND SLR.EFF_STATUS = 'A'

END-SELECT

end-procedure



!***********************************************************************
! Procedure Name : Find-Best-Match-Lunch-Rules
! Description    :
!***********************************************************************
begin-procedure Find-Best-Match-Lunch-Rules

show 'In Find-Best-Match-Lunch-Rules'

let $found_matching_rule = 'N'

!Most selective rule uses emplid/empl_rcd/work_area_id/deptid
let $where_clause = 'AND DLR.EMPLID = ''' || $emplid || ''' AND DLR.EMPL_RCD = ' || to_char(#empl_rcd) || ' AND DLR.WORK_AREA_ID = ' || to_char(#work_area_id) || ' AND DLR.DEPTID = ''' || $deptid || ''''
do Find-Lunch-Rule

if ($found_matching_rule = 'N')
  !no luck, so look based on empld/work_area_id/deptid (-1 is empl_rcd wildcard)
  let $where_clause = 'AND DLR.EMPLID = ''' || $emplid || ''' AND DLR.EMPL_RCD = -1 AND DLR.WORK_AREA_ID = ' || to_char(#work_area_id) || ' AND DLR.DEPTID = ''' || $deptid || ''''
  do Find-Lunch-Rule
end-if

if ($found_matching_rule = 'N')
  !no luck, so look based on work_area_id/deptid (@ is emplid wildcard, -1 is empl_rcd wildcard)
  let $where_clause = 'AND DLR.EMPLID = ''@'' AND DLR.EMPL_RCD = -1 AND DLR.WORK_AREA_ID = ' || to_char(#work_area_id) || ' AND DLR.DEPTID = ''' || $deptid || ''''
  do Find-Lunch-Rule
end-if

if ($found_matching_rule = 'N')
  !no luck, so look based on deptid (@ is emplid wildcard, -1 is empl_rcd wildcard, -1 is work_area_id wildcard)
  let $where_clause = 'AND DLR.EMPLID = ''@'' AND DLR.EMPL_RCD = -1 AND DLR.WORK_AREA_ID = -1 AND DLR.DEPTID = ''' || $deptid || ''''
  do Find-Lunch-Rule
end-if

if ($found_matching_rule = 'N')
  !no luck, just use the system rule
  let #max_mins = 60*24+1
  do Find-Lunch-Block
end-if

end-procedure   ! Find-Best-Match-Lunch-Rules




!***********************************************************************
! Procedure Name : Find-Lunch-Rule
! Description    :
!***********************************************************************
begin-procedure Find-Lunch-Rule

show 'In Find-Lunch-Rule'

BEGIN-SELECT
DLR.MAX_MINS

  let $found_matching_rule  = 'Y'
  let #max_mins             = &DLR.MAX_MINS

  show 'Found a rule:'
  show '    max_mins = ' #max_mins

  do Find-Lunch-Block

FROM TK_DEPT_LUNCH_RL_T DLR
WHERE DLR.EFFDT = (SELECT MAX(DLRD.EFFDT)
                   FROM TK_DEPT_LUNCH_RL_T DLRD
                   WHERE DLRD.DEPTID = DLR.DEPTID
                     AND DLRD.WORK_AREA_ID = DLR.WORK_AREA_ID
                     AND DLRD.EMPLID = DLR.EMPLID
                     AND DLRD.EMPL_RCD = DLR.EMPL_RCD
                     AND DLRD.EFFDT <= to_date($today,'yyyymmdd'))
  AND DLR.EFFSEQ = (SELECT MAX(DLRS.EFFSEQ)
                    FROM TK_DEPT_LUNCH_RL_T DLRS
                    WHERE DLRS.DEPTID = DLR.DEPTID
                      AND DLRS.WORK_AREA_ID = DLR.WORK_AREA_ID
                      AND DLRS.EMPLID = DLR.EMPLID
                      AND DLRS.EMPL_RCD = DLR.EMPL_RCD
                      AND DLRS.EFFDT = DLR.EFFDT)
   AND DLR.EFF_STATUS = 'A'
   AND DLR.REQUIRED_CLOCK_FL = 'Y'
   [$where_clause]
END-SELECT

end-procedure ! Find-Lunch-Rule



!***********************************************************************
! Procedure Name : Find-Lunch-Block
! Description    :
!***********************************************************************
begin-procedure Find-Lunch-Block

let $found_block = 'N'
let #lunch_duration = 0
let #block_duration = 0
let $time_block_start = $min_earliest_time_block_start
let $time_block_end = $max_latest_time_block_end
let $earliest_time_block_start = $min_earliest_time_block_start

while ($found_block = 'N')
  do Find-Time-Block
  do Is-Lunch-In-Block
  if ($earliest_time_block_start = $time_block_end)
    break
  end-if
  let $earliest_time_block_start = $time_block_end
end-while

if ($found_block = 'Y')
  do Compare-Lunch-Block-To-Lunch-Rule
end-if

end-procedure ! Find-Lunch-Block


!***********************************************************************
! Procedure Name : Find-Time-Block
! Description    :
!***********************************************************************
begin-procedure Find-Time-Block

let $task_id = ' '

BEGIN-SELECT
to_char(MIN(STARTX.CLOCK_TS),'yyyymmdd hh24:mi:ss') &STARTX.CLOCK_TS
STARTX.TASK_ID &STARTX.TASK_ID

  let $time_block_start = &STARTX.CLOCK_TS
  let $task_id = to_char(round(&STARTX.TASK_ID,0))

FROM TK_CLOCK_LOG_T STARTX
WHERE STARTX.EMPLID = $emplid
  AND STARTX.EMPL_RCD = #empl_rcd
  AND STARTX.WORK_AREA_ID = #work_area_id
  AND STARTX.CLOCK_TS BETWEEN to_date($earliest_time_block_start,'yyyymmdd hh24:mi:ss') AND to_date($max_latest_time_block_end,'yyyymmdd hh24:mi:ss')
  AND STARTX.CLOCK_ACTION_CD ='CI'
GROUP BY STARTX.TASK_ID
END-SELECT

BEGIN-SELECT
to_char(MIN(STOPT.CLOCK_TS),'yyyymmdd hh24:mi:ss') &STOPT.CLOCK_TS

  let $time_block_end = &STOPT.CLOCK_TS

FROM TK_CLOCK_LOG_T STOPT
WHERE STOPT.EMPLID = $emplid
  AND STOPT.EMPL_RCD = #empl_rcd
  AND STOPT.WORK_AREA_ID = #work_area_id
  AND STOPT.CLOCK_TS BETWEEN to_date($time_block_start,'yyyymmdd hh24:mi:ss') AND to_date($max_latest_time_block_end,'yyyymmdd hh24:mi:ss')
  AND STOPT.CLOCK_ACTION_CD ='CO'
END-SELECT

let #block_duration = datediff(strtodate($time_block_end,'yyyymmdd hh24:mi:ss'),strtodate($time_block_start,'yyyymmdd hh24:mi:ss'),'hour')

end-procedure ! Find-Time-Block



!***********************************************************************
! Procedure Name : Is-Lunch-In-Block
! Description    :
!***********************************************************************
begin-procedure Is-Lunch-In-Block

BEGIN-SELECT
!to_char(MIN(LUNCH_T.CLOCK_TS),'yyyymmdd hh24:mi:ss') &LUNCH_T.CLOCK_TS
to_char(LUNCH_T.CLOCK_TS,'yyyymmdd hh24:mi:ss') &LUNCH_T.CLOCK_TS
  let $found_block = 'Y'
  let $lunch_start = &LUNCH_T.CLOCK_TS
  show 'emplid ' $emplid
  show 'empl_rcd ' #empl_rcd
  show 'work_area_id ' #work_area_id
  show 'lunch_start ' $lunch_start

FROM TK_CLOCK_LOG_T LUNCH_T
WHERE LUNCH_T.EMPLID = $emplid
  AND LUNCH_T.EMPL_RCD = #empl_rcd
  AND LUNCH_T.WORK_AREA_ID = #work_area_id
  AND LUNCH_T.CLOCK_TS BETWEEN to_date($time_block_start,'yyyymmdd hh24:mi:ss') AND to_date($time_block_end,'yyyymmdd hh24:mi:ss')
  AND LUNCH_T.CLOCK_ACTION_CD ='LO'
END-SELECT


BEGIN-SELECT
!to_char(MIN(LUNCH_T2.CLOCK_TS),'yyyymmdd hh24:mi:ss') &LUNCH_T2.CLOCK_TS
to_char(LUNCH_T2.CLOCK_TS,'yyyymmdd hh24:mi:ss') &LUNCH_T2.CLOCK_TS

  let $lunch_end = &LUNCH_T2.CLOCK_TS

FROM TK_CLOCK_LOG_T LUNCH_T2
WHERE LUNCH_T2.EMPLID = $emplid
  AND LUNCH_T2.EMPL_RCD = #empl_rcd
  AND LUNCH_T2.WORK_AREA_ID = #work_area_id
  AND LUNCH_T2.CLOCK_TS BETWEEN to_date($time_block_start,'yyyymmdd hh24:mi:ss') AND to_date($time_block_end,'yyyymmdd hh24:mi:ss')
  AND LUNCH_T2.CLOCK_ACTION_CD ='LI'
END-SELECT

if ($found_block = 'Y')
  let #lunch_duration = datediff(strtodate($lunch_end,'yyyymmdd hh24:mi:ss'),strtodate($lunch_start,'yyyymmdd hh24:mi:ss'),'minute')
end-if

end-procedure ! Is-Lunch-In-Block




!***********************************************************************
! Procedure Name : Compare-Lunch-Block-To-Lunch-Rule
! Description    :
!***********************************************************************
begin-procedure Compare-Lunch-Block-To-Lunch-Rule

SHOW '#block_duration  ' #block_duration ' #system_block_hrs ' #system_block_hrs

if (#block_duration < #system_block_hrs)
  let $exception_type = 'BLT'
  let #actual_minutes = -1
  let #rule_minutes = #system_block_hrs * 60
  let $block_begin = $lunch_start
  do Insert-Exception
else

  if (#lunch_duration < #system_min_mins)
    let $exception_type = 'BLT'
    let #actual_minutes = #lunch_duration
    let #rule_minutes = #system_min_mins
    let $block_begin = $lunch_start
    do Insert-Exception
  else

    if (#lunch_duration > #max_mins)
      let $exception_type = 'ELT'
      let #actual_minutes = #lunch_duration
      let #rule_minutes = #max_mins
      let $block_begin = $lunch_start
      do Insert-Exception
    end-if
  end-if
end-if


end-procedure ! Compare-Lunch-Block-To-Lunch-Rule




!***********************************************************************
! Procedure Name : Insert-Exception
! Description    :
!***********************************************************************
begin-procedure Insert-Exception

show '$exception_type ' $exception_type 
show '$emplid         ' $emplid         
show '#empl_rcd       ' #empl_rcd       
show '$effdt          ' $effdt          
show '#effseq         ' #effseq         
show '#work_area_id   ' #work_area_id   
show '$task_id        ' $task_id       
show '$block_begin    ' $block_begin    
show '#actual_minutes ' #actual_minutes 
show '#rule_minutes   ' #rule_minutes   


BEGIN-SQL ON-ERROR=SQL_Error 
INSERT INTO TK_LUNCH_MINUTES_EXCEPTION_T
(
EXCEPTION_DT,
EXCEPTION_TYPE,
EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
WORK_AREA_ID,
TASK_ID,
BLOCK_BEGIN_TS,
ACTUAL_MINUTES,
RULE_MINUTES
)
VALUES
(
to_date($today,'yyyymmdd'),
$exception_type,
$emplid,
#empl_rcd,
to_date($effdt,'yyyymmdd'),
#effseq,
to_char(#work_area_id),
$task_id,
to_date($block_begin,'yyyymmdd hh24:mi:ss'),
#actual_minutes,
#rule_minutes
)
END-SQL

end-procedure ! Insert-Exception


begin-procedure SQL_error

if substr($sql-error,1,9) = 'ORA-00001'
   ! ignore unique constraints
else
   Show 'SQL Error: ' $sql-error
   Show 'SQL Status: ' #sql-status
   stop
end-if

end-Procedure ! SQL_Error

